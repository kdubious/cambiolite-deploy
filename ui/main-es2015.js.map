{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Help/about/about.component.ts","./src/app/Help/about/about.component.html","./src/app/Help/support/support.component.ts","./src/app/Help/support/support.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/audio-setup/audio-setup.component.ts","./src/app/audio-setup/audio-setup.component.html","./src/app/bottom-sheet-data/bottom-sheet-data.component.ts","./src/app/bottom-sheet-data/bottom-sheet-data.component.html","./src/app/errors/webapi.ts","./src/app/forms/form-validation.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/models/enum-subnet-mask.ts","./src/app/models/output.ts","./src/app/network/network.component.ts","./src/app/network/network.component.html","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/services/api.service.ts","./src/app/services/http-interceptors-barrel.ts","./src/app/services/service-result.ts","./src/app/services/serviceurl-interceptor.ts","./src/app/update/update.component.ts","./src/app/update/update.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAkD;;AAO3C,MAAM,cAAc;IAEzB;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCP3B,6EACI;QAAA,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QACd,qEAAI;QAAA,mFAAwB;QAAA,4DAAK;QACjC,oEAAG;QAAA,mHAAwD;QAAA,4DAAI;QAC/D,oEAAG;QAAA,oFAAyB;QAAA,4DAAI;QAChC,qEACI;QAAA,sEAAI;QAAA,oFAAwB;QAAA,4DAAK;QACjC,sEAAI;QAAA,0GAA8C;QAAA,4DAAK;QACvD,sEAAI;QAAA,iIAAqE;QAAA,4DAAK;QAClF,4DAAK;QAEL,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,6FAAiC;QAAA,4DAAK;QAC1C,qEAAG;QAAA,yGAA6C;QAAA,4DAAI;QACpD,qEAAG;QAAA,4IAAgF;QAAA,4DAAI;QAC3F,4DAAU;;6FDRG,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAkD;;AAO3C,MAAM,gBAAgB;IAE3B;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,6EACI;QAAA,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAChB,qEAAI;QAAA,kFAAuB;QAAA,4DAAK;QAChC,oEAAG;QAAA,8DAAG;QAAA,uEAA2B;QAAA,uEAAY;QAAA,4DAAI;QAAA,4DAAI;QACrD,oEAAG;QAAA,0EAAQ;QAAA,mEAAO;QAAA,4DAAS;QAAA,iEACvB;QAAA,wEAAoD;QAAA,8FAAkC;QAAA,4DAAI;QAAA,4DAAI;QAClG,qEAAG;QAAA,0EAAQ;QAAA,0EAAc;QAAA,4DAAS;QAAA,4DAAI;QACtC,qEAAG;QAAA,yUAE6C;QAAA,4DAAI;QACxD,4DAAU;;6FDHG,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACmB;AACZ;AACM;AACd;AACS;AACe;AAClB;;;AAG5D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE;IACtC,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sFAAmB,EAAE;IACvD;QACE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE;YACtB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gFAAgB,EAAE;YACzC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,0EAAc,EAAE;SAC7C;KACF;IACD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0FAAqB,EAAE;IAC1D,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;CAC/C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AACzB;;;;;;;;;;;;;AAwBjD,MAAM,YAAY;IAKvB,YAAmB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;QAHjC,oBAAe,GAAG,IAAI,CAAC;QACvB,aAAQ,GAAG,KAAK,CAAC;QAGtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAGD,QAAQ,CAAC,KAAK;QACZ,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC;IAC1C,CAAC;;wEAZU,YAAY;4FAAZ,YAAY;;;QCzBzB,yEACE;QAAA,yEACE;QAAA,uEACE;QAAA,oEACF;QAAA,4DAAI;QACJ,4EAEE;QAFgE,wLAA4C;QAE5G,qEAAyC;QAC3C,4DAAS;QAET,yEACE;QAAA,wEACE;QAAA,wEACE;QAAA,uEAAqF;QAAjC,2JAA2B,IAAI,IAAC;QAAC,uEAAW;QAAA,4DAAI;QACtG,4DAAK;QACL,yEACE;QAAA,wEAAiF;QAAjC,4JAA2B,IAAI,IAAC;QAAC,yEAAa;QAAA,4DAAI;QACpG,4DAAK;QACL,yEACE;QAAA,wEAAsF;QAAjC,4JAA2B,IAAI,IAAC;QAAC,wEAAY;QAAA,4DAAI;QACxG,4DAAK;QACL,yEACE;QAAA,wEAAgF;QAAjC,4JAA2B,IAAI,IAAC;QAAC,kEAAM;QAAA,4DAAI;QAC5F,4DAAK;QACL,0EACE;QAAA,yEAAsF;QAAA,gEAAI;QAAA,4DAAI;QAC9F,2EACE;QAAA,yEAC4C;QAAA,mEAAO;QAAA,4DAAI;QACvD,yEAC4C;QAAA,iEAAK;QAAA,4DAAI;QACvD,4DAAM;QACR,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,4EAA+B;;QAnCH,0DAAoB;QAApB,8IAAoB;QAI1C,0DAAuC;QAAvC,gGAAuC;QAIpC,0DAA+B;QAA/B,4FAA+B;QACH,0DAA2E;QAA3E,0IAA2E;QACpG,0DAA+B;QAA/B,oJAA+B;QACb,0DAA+B;QAA/B,8IAA+B;QAEjD,0DAA+B;QAA/B,oJAA+B;QACb,0DAA2B;QAA3B,8IAA2B;QAE7C,0DAA+B;QAA/B,oJAA+B;QACb,0DAAgC;QAAhC,8IAAgC;QAElD,0DAA+B;QAA/B,oJAA+B;QACb,0DAA0B;QAA1B,8IAA0B;QAE5C,0DAA+B;QAA/B,oJAA+B;QAGc,0DAAwB;QAAxB,8IAAwB;QAEjC,0DAA8B;QAA9B,8IAA8B;m2BDrBhE;YACV,mEAAO,CAAC,gBAAgB,EAAE;gBACxB,iEAAK,CAAC,SAAS,EAAE,iEAAK,CAAC;oBACrB,MAAM,EAAE,KAAK;oBACb,QAAQ,EAAE,QAAQ;oBAClB,OAAO,EAAE,GAAG;iBACb,CAAC,CAAC;gBACH,iEAAK,CAAC,OAAO,EAAE,iEAAK,CAAC;oBACnB,MAAM,EAAE,OAAO;oBACf,mBAAmB;oBACnB,OAAO,EAAE,GAAG;iBACb,CAAC,CAAC;gBACH,sEAAU,CAAC,gBAAgB,EAAE,mEAAO,CAAC,gBAAgB,CAAC,CAAC;gBACvD,sEAAU,CAAC,gBAAgB,EAAE,mEAAO,CAAC,OAAO,CAAC,CAAC;aAC/C,CAAC;SACH;6FAEU,YAAY;cArBxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;gBACnC,UAAU,EAAE;oBACV,mEAAO,CAAC,gBAAgB,EAAE;wBACxB,iEAAK,CAAC,SAAS,EAAE,iEAAK,CAAC;4BACrB,MAAM,EAAE,KAAK;4BACb,QAAQ,EAAE,QAAQ;4BAClB,OAAO,EAAE,GAAG;yBACb,CAAC,CAAC;wBACH,iEAAK,CAAC,OAAO,EAAE,iEAAK,CAAC;4BACnB,MAAM,EAAE,OAAO;4BACf,mBAAmB;4BACnB,OAAO,EAAE,GAAG;yBACb,CAAC,CAAC;wBACH,sEAAU,CAAC,gBAAgB,EAAE,mEAAO,CAAC,gBAAgB,CAAC,CAAC;wBACvD,sEAAU,CAAC,gBAAgB,EAAE,mEAAO,CAAC,OAAO,CAAC,CAAC;qBAC/C,CAAC;iBACH;aACF;;kBAUE,0DAAY;mBAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;AElC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACf;AACyB;AACF;AACD;AACa;AACV;AACX;AACE;AACa;AACX;AACA;AACD;AACqB;AACxB;AACC;AACT;AAC2B;AACiB;AAC7B;AACM;AACd;AACS;AACe;AAC1B;AAC2B;AACnB;;AAkCrD,MAAM,SAAS;;wFAAT,SAAS,cAFR,4DAAY;4IAEb,SAAS,mBAHT,CAAC,EAAE,OAAO,EAAE,wEAAe,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,wEAAe,EAAE,6EAAc,EAAE,iEAAU,EAAE,4FAAwB,CAAC,YAjBrH;YACP,wEAAa;YACb,qEAAgB;YAChB,6FAAuB;YACvB,0DAAW;YACX,kEAAmB;YACnB,qEAAS;YACT,4EAAiB;YACjB,wEAAe;YACf,+EAAkB;YAClB,oEAAa;YACb,sEAAc;YACd,mFAAoB;YACpB,yEAAe;YACf,yEAAe;YACf,qEAAgB;SACjB;mIAIU,SAAS,mBA9BlB,4DAAY;QACZ,uFAAmB;QACnB,wGAAwB;QACxB,2FAAqB;QACrB,mEAAa;QACb,4EAAgB;QAChB,2EAAc;QACd,iFAAgB;QAChB,yEAAe,aAGf,wEAAa;QACb,qEAAgB;QAChB,6FAAuB;QACvB,0DAAW;QACX,kEAAmB;QACnB,qEAAS;QACT,4EAAiB;QACjB,wEAAe;QACf,+EAAkB;QAClB,oEAAa;QACb,sEAAc;QACd,mFAAoB;QACpB,yEAAe;QACf,yEAAe;QACf,qEAAgB;6FAKP,SAAS;cAhCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,4DAAY;oBACZ,uFAAmB;oBACnB,wGAAwB;oBACxB,2FAAqB;oBACrB,mEAAa;oBACb,4EAAgB;oBAChB,2EAAc;oBACd,iFAAgB;oBAChB,yEAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,wEAAa;oBACb,qEAAgB;oBAChB,6FAAuB;oBACvB,0DAAW;oBACX,kEAAmB;oBACnB,qEAAS;oBACT,4EAAiB;oBACjB,wEAAe;oBACf,+EAAkB;oBAClB,oEAAa;oBACb,sEAAc;oBACd,mFAAoB;oBACpB,yEAAe;oBACf,yEAAe;oBACf,qEAAgB;iBACjB;gBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,wEAAe,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,wEAAe,EAAE,6EAAc,EAAE,iEAAU,EAAE,4FAAwB,CAAC;gBAC9H,SAAS,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC3DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAGC;AACjC;AACkB;AACgD;AAClC;;;;;;;;;;;;;;ICHlB,+EAAoB;IAAA,sEAAK;IAAA,4DAAC;IAAA,4DAAM;IAAA,uJACN;IAAA,yEAAQ;IAAA,4DAAC;IAAA,sEAAK;IAAA,4DAAC;IAAA,4DAAM;IAAA,wFAC7D;IAAA,4DAAS;IAAA,6DACvB;;;IAe4B,2JACT;IAAA,yEAAQ;IAAA,+DAAI;IAAA,4DAAS;IAAC,mJAEzC;;;IAWyB,oJACX;IAAA,sEAAK;IAAA,4DAAC;IAAA,4DAAM;IAAA,6GAC1B;;;IAQ4B,oFAAyB;IAAA,yEAAQ;IAAA,iFAAsB;IAAA,4DAAS;IAAC,gKAG7F;;;;IA/CR,0EACI;IADsC,oUAAuB;IAC7D,yEACI;IAAA,mNAA4B;IAI5B,2EAAiD;IAAA,2EAAgB;IAAA,4DAAQ;IACzE,0EACI;IAAA,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAC7B,4DAAO;IACP,gEACA;IAAA,kFACI;IAAA,iFACI;IAAA,iFAAyB;IAAA,6DAAC;IAAA,uEAAK;IAAA,6DAAC;IAAA,4DAAM;IAAA,yFAA6B;IAAA,4DAAa;IAChF,iFAAyB;IAAA,+DAAG;IAAA,4DAAa;IAC7C,4DAAa;IACjB,4DAAiB;IACrB,4DAAM;IAEN,0EACI;IAAA,qNAA4B;IAI5B,6EAAmE;IAAA,wEAAY;IAAA,4DAAQ;IACvF,2EACI;IAAA,4EAAU;IAAA,gEAAI;IAAA,4DAAW;IAC7B,4DAAO;IACP,iEACA;IAAA,6EACa;IACjB,4DAAM;IAEN,0EACI;IAAA,qNAAyB;IAGzB,mFAAkC;IAAA,8EAAkB;IAAA,4DAAe;IACnE,4EACI;IAAA,4EAAU;IAAA,gEAAI;IAAA,4DAAW;IAC7B,4DAAO;IACX,4DAAM;IAEN,0EACI;IAAA,qNAA4B;IAI5B,mFAAqC;IAAA,gFAErC;IAAA,4DAAe;IACf,4EACI;IAAA,4EAAU;IAAA,gEAAI;IAAA,4DAAW;IAC7B,4DAAO;IACX,4DAAM;IAEN,2EACI;IAAA,8EAA6E;IAAjB,6TAAgB;IAAC,iEAAK;IAAA,4DAAS;IAC3F,8EAAgF;IAAA,0EAAc;IAAA,4DAAS;IAC3G,4DAAM;IACV,4DAAO;;;;;;;IA5Da,qFAAqB;IAOK,0DAA4B;IAA5B,2EAA4B;IAKlD,0DAAsB;IAAtB,sFAAsB;IAaA,2DAA4B;IAA5B,2EAA4B;IAIS,0DAA8B;IAA9B,8FAA8B;IAQ3F,0DAAmB;IAAnB,mFAAmB;IACE,0DAAyB;IAAzB,2EAAyB;IAU9C,0DAAsB;IAAtB,sFAAsB;IAGD,0DAA4B;IAA5B,2EAA4B;IAOV,0DAA0B;IAA1B,0FAA0B;;AD3CpF,MAAM,mBAAmB;IAM9B,YACU,EAAe,EACf,OAAmB;IAC3B,uDAAuD;IAC/C,WAA2B,EACH,IAAS;QAJjC,OAAE,GAAF,EAAE,CAAa;QACf,YAAO,GAAP,OAAO,CAAY;QAEnB,gBAAW,GAAX,WAAW,CAAgB;QACH,SAAI,GAAJ,IAAI,CAAK;QAPpC,WAAM,GAAG,KAAK,CAAC;IAOyB,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,EACC,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAEF,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,0BAA0B;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;iBAC/C,IAAI,CACH,iEAAU,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;gBACzB,qEAAc,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,OAAO,+CAAE,CAAC,IAA6B,CAAC,CAAC;YAC3C,CAAC,CAAC,CACH;iBACA,SAAS,CAAC,MAAM,CAAC,EAAE;gBAClB,IAAI,MAAM,CAAC,OAAO,EAAE;oBAClB,IAAI,CAAC,WAAW;yBACb,IAAI,CAAC,uGAAwB,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,uCAAuC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;oBACnH,0BAA0B;iBAC3B;qBAAM;oBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,uGAAwB,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;iBACzG;gBACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACtB,CAAC,CAAC,CAAC;SACN;aAAM;YACL,qEAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACpD;IACH,CAAC;IAED,UAAU,CAAC,KAAc;QACvB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;SAC3C;aAAM;YACL,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBAC3B,MAAM,EAAE,KAAK,CAAC,MAAM;oBACpB,GAAG,EAAE,KAAK,CAAC,GAAG;oBACd,MAAM,EAAE,KAAK,CAAC,MAAM;oBACpB,cAAc,EAAE,KAAK,CAAC,cAAc;iBACrC,CAAC,CAAC;gBACH,yBAAyB;gBACzB,6BAA6B;aAC9B;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBAC3B,MAAM,EAAE,CAAC;oBACT,GAAG,EAAE,KAAK;oBACV,MAAM,EAAE,KAAK;oBACb,cAAc,EAAE,IAAI;iBACrB,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;IACH,CAAC;IAED,aAAa;QACX,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACrC,MAAM,SAAS,GAAW;YACxB,MAAM,EAAE,SAAS,CAAC,MAAM;YACxB,GAAG,EAAE,SAAS,CAAC,GAAG;YAClB,MAAM,EAAE,SAAS,CAAC,MAAM;YACxB,cAAc,EAAE,SAAS,CAAC,cAAc;SACzC,CAAC;QACF,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,cAAc;QACZ,OAAO;YACL,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YACzB,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG;YACnB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YACzB,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc;SAC1C,CAAC;IACJ,CAAC;IAED,IAAI;QACF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,uBAAuB;IACvB,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IACD,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IACD,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC5C,CAAC;IAEM,KAAK,CAAC,KAAc;QACzB,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAC9B,CAAC;IAED,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC;IAC9C,CAAC;;sFA7HU,mBAAmB,kdAWpB,wEAAe;mGAXd,mBAAmB;QCjBhC,6EACI;QAAA,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,mHACI;QA4DR,4DAAU;;QA7DA,0DAAa;QAAb,2EAAa;;6FDeV,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;sBAYI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AE5B3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACa;;;;;ICGvE,iFAA+E;;ADIxE,MAAM,wBAAwB;IAEnC,YAAkD,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;IAAI,CAAC;IAIhE,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzC,CAAC;;gGAXU,wBAAwB,kEAEf,oFAAqB;wGAF9B,wBAAwB;QCRrC,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,oEACI;QAAA,uDACJ;QAAA,4DAAI;QACJ,8IAA4D;;QAFxD,0DACJ;QADI,6FACJ;QACuC,0DAAoB;QAApB,kFAAoB;;6FDI9C,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;sBAGc,oDAAM;uBAAC,oFAAqB;;;;;;;;;;;;;;AER3C;AAAA;AAAO,MAAM,MAAM;IACf;QACI,yCAAyC;QACzC,+CAA+C;QAC/C,iCAAiC;QACjC,qCAAqC;IACzC,CAAC;IAED,MAAM,CAAC,UAAU,CAAC,KAAU;QACxB,IAAI,GAAG,GAAgB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QACzD,OAAO,GAAG,CAAC;IACf,CAAC;CAEJ;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAyE;AAE/B;AAGnC,MAAM,cAAc;IAGhB,MAAM,CAAC,SAAS,CAAC,OAAwB;QAC5C,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;aAC7B,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACxC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;YACX,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACnC,OAAO;gBACH,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM;aAC1D,CAAC;QACN,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,MAAM,CAAC,gBAAgB,CAAC,KAAa,EAAE,OAAkB;QAC5D,IAAI,OAAwB,CAAC;QAC7B,IAAI,KAAK,KAAK,MAAM,EAAE;YAClB,OAAO,GAAG,OAAO,CAAC;SACrB;aAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAChC;aAAM,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;YACtF,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;SAC/D;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAC/B,IAAI,KAAK,GAAG,OAAO,CAAC;YACpB,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC3B,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;oBACnB,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvB,IAAI,OAAO,YAAY,wDAAS;wBAAE,KAAK,GAAG,OAAO,CAAC;iBACrD;qBAAM;oBACH,OAAO,GAAG,KAAK,CAAC;iBACnB;YACL,CAAC,CAAC;SACL;aAAM;YACH,uFAAuF;YACvF,OAAO,GAAG,OAAO,CAAC;SACrB;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAEO,gBAAgB,CAAC,IAAS,EAAE,KAAa;QAC7C,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACtB,IAAI,IAAI,GAAW,CAAC,CAAC,KAAK,CAAC;YAC3B,OAAO,CAAC,CAAC,KAAK,CAAC;YACf,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAClB,CAAC;IAGM,MAAM,CAAC,qBAAqB,CAAC,SAAoB;QACpD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC5C,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,OAAO,YAAY,0DAAW,EAAE;gBAChC,OAAO,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC7C;iBAAM,IAAI,OAAO,YAAY,wDAAS,EAAE;gBACrC,cAAc,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;aACjD;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,iBAAiB,CAAC,MAAW,EAAE,OAAkB;QAC3D,IAAI,GAAG,GAAgB,qDAAM,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtC,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,OAAO,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YAC5D,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;CAEJ;;;;;;;;;;;;;AC7ED;AAAA;AAAA;AAAkD;;AAO3C,MAAM,aAAa;IAExB;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,qEAAU;QAAA,gEAAI;QAAA,+EAAoB;QAAA,gEAAI;QAAA,yEAAc;QAAA,4DAAK;QACjE,4DAAM;QACV,4DAAM;;6FDGO,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA,IAAY,UAiCX;AAjCD,WAAY,UAAU;IAClB,qDAAe;IACf,qDAAW;IACX,qDAAW;IACX,qDAAW;IACX,qDAAW;IACX,qDAAW;IACX,qDAAW;IACX,qDAAW;IACX,yDAAa;IACb,0DAAa;IACb,0DAAa;IACb,0DAAa;IACb,0DAAa;IACb,0DAAa;IACb,0DAAa;IACb,0DAAa;IACb,8DAAe;IACf,8DAAe;IACf,8DAAe;IACf,8DAAe;IACf,8DAAe;IACf,8DAAe;IACf,8DAAe;IACf,8DAAe;IACf,kEAAiB;IACjB,kEAAiB;IACjB,kEAAiB;IACjB,kEAAiB;IACjB,kEAAiB;IACjB,kEAAiB;IACjB,kEAAiB;IACjB,kEAAiB;AACrB,CAAC,EAjCW,UAAU,KAAV,UAAU,QAiCrB;;;;;;;;;;;;;AChCD;AAAA;AAAO,MAAM,MAAM;IAOf,YAAY,QAAiB;QALtB,WAAM,GAAG,EAAE,CAAC;QACZ,QAAG,GAAG,KAAK,CAAC;QACZ,WAAM,GAAG,KAAK,CAAC;QACf,mBAAc,GAAG,IAAI,CAAC;QAGzB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAClC,CAAC;CAEJ;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACoC;AAE5D;AACkB;AACgD;AAClC;AAEF;;;;;;;;;;;;;ICLlB,0EAAe;IAAA,yEAAQ;IAAA,+DAAI;IAAA,4DAAS;IAAA,6HACvC;IAAA,yEAAQ;IAAA,iEAAM;IAAA,4DAAS;IAAA,uGAC9C;;;IAewB,8EAAmB;IAAA,yEAAQ;IAAA,qEAAU;IAAA,4DAAS;IAAC,4FACnE;IAAA,yEAAQ;IAAA,iEAAM;IAAA,4DAAS;IAAA,gFAAqB;IAAA,yEAAQ;IAAA,+DAAI;IAAA,4DAAS;IAAA,6HAErE;;;IAYwB,8EAAmB;IAAA,yEAAQ;IAAA,sEAAW;IAAA,4DAAS;IAAC,4FACpE;IAAA,yEAAQ;IAAA,iEAAM;IAAA,4DAAS;IAAA,gFAAqB;IAAA,yEAAQ;IAAA,+DAAI;IAAA,4DAAS;IAAA,oGACzD;IAAA,0EAAQ;IAAA,uEAAW;IAAA,4DAAS;IAAC,2EACzC;;;IAQQ,gFAA4D;IAAA,uDAAgB;IAAA,4DAAa;;;IAAlD,iFAAoB;IAAC,0DAAgB;IAAhB,+EAAgB;;;IAM5D,8EAAmB;IAAA,yEAAQ;IAAA,kEAAO;IAAA,4DAAS;IAAC,4FAChE;IAAA,yEAAQ;IAAA,iEAAM;IAAA,4DAAS;IAAA,gFAAqB;IAAA,yEAAQ;IAAA,+DAAI;IAAA,4DAAS;IAAA,oGACzD;IAAA,0EAAQ;IAAA,mEAAO;IAAA,4DAAS;IAAC,2EACrC;;;IAYyB,8EAAmB;IAAA,yEAAQ;IAAA,qEAAU;IAAA,4DAAS;IAAC,4FACpE;IAAA,yEAAQ;IAAA,iEAAM;IAAA,4DAAS;IAAA,gFAAqB;IAAA,yEAAQ;IAAA,+DAAI;IAAA,4DAAS;IAAA,oGACzD;IAAA,0EAAQ;IAAA,sEAAU;IAAA,4DAAS;IAAC,2EACxC;;;;IArER,0EACI;IADsC,iUAAuB;IAC7D,yEACI;IAAA,+MAA0B;IAG1B,2EAAiC;IAAA,uEAAY;IAAA,4DAAQ;IACrD,0EACI;IAAA,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAC7B,4DAAO;IACP,gEACA;IAAA,kFACI;IAAA,iFACI;IAAA,iFAAwB;IAAA,gEAAI;IAAA,4DAAa;IACzC,iFAAwB;IAAA,kEAAM;IAAA,4DAAa;IAC/C,4DAAa;IACjB,4DAAiB;IACrB,4DAAM;IAEN,0EACI;IAAA,kNAAwB;IAIxB,4EAAiC;IAAA,sEAAU;IAAA,4DAAQ;IACnD,2EACI;IAAA,4EAAU;IAAA,gEAAI;IAAA,4DAAW;IAC7B,4DAAO;IACP,iEACA;IAAA,kFACI;IAAA,wEACJ;IAAA,4DAAiB;IACrB,4DAAM;IAEN,2EACI;IAAA,mNAAwB;IAIxB,4EAAiC;IAAA,uEAAW;IAAA,4DAAQ;IACpD,2EACI;IAAA,4EAAU;IAAA,gEAAI;IAAA,4DAAW;IAC7B,4DAAO;IACP,iEACA;IAAA,kFACI;IAAA,iFACI;IAAA,oIAA4D;IAChE,4DAAa;IACjB,4DAAiB;IACrB,4DAAM;IAEN,2EACI;IAAA,mNAAwB;IAIxB,6EAA6B;IAAA,mEAAO;IAAA,4DAAQ;IAC5C,2EACI;IAAA,4EAAU;IAAA,gEAAI;IAAA,4DAAW;IAC7B,4DAAO;IACP,iEACA;IAAA,kFACI;IAAA,wEACJ;IAAA,4DAAiB;IACrB,4DAAM;IAEN,2EACI;IAAA,mNAAyB;IAIzB,6EAA+B;IAAA,sEAAU;IAAA,4DAAQ;IACjD,2EACI;IAAA,4EAAU;IAAA,gEAAI;IAAA,4DAAW;IAC7B,4DAAO;IACP,iEACA;IAAA,kFACI;IAAA,wEACJ;IAAA,4DAAiB;IACrB,4DAAM;IACN,2EACI;IAAA,8EAA6E;IAAjB,0TAAgB;IAAC,iEAAK;IAAA,4DAAS;IAC3F,8EAAgF;IAAA,0EAAc;IAAA,4DAAS;IAC3G,4DAAM;IACV,4DAAO;;;;;;;IAnFa,sFAAqB;IAMK,0DAA0B;IAA1B,4EAA0B;IAKhD,0DAAoB;IAApB,qFAAoB;IAChB,0DAAW;IAAX,oEAAW;IACX,0DAAW;IAAX,oEAAW;IAWO,0DAAwB;IAAxB,4EAAwB;IAK1C,0DAAkB;IAAlB,mFAAkB;IAUA,0DAAwB;IAAxB,4EAAwB;IAK9C,0DAAkB;IAAlB,mFAAkB;IACd,0DAA0B;IAA1B,kFAA0B;IAWR,0DAAwB;IAAxB,4EAAwB;IAKhC,0DAAkB;IAAlB,mFAAkB;IAUV,0DAAwB;IAAxB,4EAAwB;IAK/B,0DAAqB;IAArB,sFAAqB;IAKC,0DAA0B;IAA1B,2FAA0B;;ADhEpF,MAAM,gBAAgB;IAW3B,YACU,EAAe,EACf,OAAmB;IAC3B,oDAAoD;IAC5C,WAA2B;QAH3B,OAAE,GAAF,EAAE,CAAa;QACf,YAAO,GAAP,OAAO,CAAY;QAEnB,gBAAW,GAAX,WAAW,CAAgB;QAX9B,UAAK,GAA+B,EAAE,CAAC;QACvC,WAAM,GAAG,KAAK,CAAC;QAcpB,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,mEAAU,CAAC;aACnC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;aAClC,GAAG,CAAC,GAAG,CAAC,EAAE;YACT,MAAM,KAAK,GAAG,mEAAU,CAAC,GAAG,CAAC,CAAC;YAC9B,oDAAoD;YACpD,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;IACtB,CAAC;IApBD,IAAI,MAAM;QACR,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;IACjC,CAAC;IAoBD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,EACC,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,0BAA0B;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YAClC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;iBAClC,IAAI,CACH,iEAAU,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;gBACzB,qEAAc,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,OAAO,+CAAE,CAAC,IAA8B,CAAC,CAAC;YAC5C,CAAC,CAAC,CACH;iBACA,SAAS,CAAC,MAAM,CAAC,EAAE;gBAClB,IAAI,MAAM,CAAC,OAAO,EAAE;oBAClB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,iBAAqB,EAAE;wBACxC,MAAM,GAAG,GAAG,wJAAwJ,CAAC;wBACrK,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,uGAAwB,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;wBAC5F,UAAU,CAAC,GAAG,EAAE;4BACd,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,iBAAiB,CAAC;wBAC3C,CAAC,EAAE,IAAI,CAAC,CAAC;qBACV;yBAAM;wBACL,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE;4BAC/C,MAAM,GAAG,GAAG,qCAAqC,MAAM,CAAC,IAAI,CAAC,EAAE,sCAAsC,CAAC;4BACtG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,uGAAwB,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;4BAC5F,UAAU,CAAC,GAAG,EAAE;gCACd,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;4BACpD,CAAC,EAAE,IAAI,CAAC,CAAC;yBACV;6BAAM;4BACL,IAAI,CAAC,WAAW;iCACb,IAAI,CAAC,uGAAwB,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,yCAAyC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;yBACtH;qBACF;iBACF;qBAAM;oBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,uGAAwB,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;iBACzG;gBACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACtB,CAAC,CAAC,CAAC;SACN;aAAM;YACL,qEAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACpD;IACH,CAAC;IAED,UAAU,CAAC,KAAe;QACxB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;SAC3C;aAAM;YACL,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBAC3B,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,iBAAqB,EAAE,CAAC;oBACnF,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,iBAAqB,EAAE,CAAC;oBACnF,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,iBAAqB,EAAE,CAAC;oBACnF,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,iBAAqB,EAAE,CAAC;oBACzF,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,iBAAqB,EAAE,CAAC;oBACzF,IAAI,EAAE,KAAK,CAAC,IAAI;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,CAAC,YAAY;qBACnB,SAAS,CAAC,MAAM,CAAC,EAAE;oBAClB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,mBAAuB,CAAC,CAAC;gBAC/D,CAAC,CAAC;aACL;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBAC3B,EAAE,EAAE,EAAE;oBACN,EAAE,EAAE,EAAE;oBACN,EAAE,EAAE,EAAE;oBACN,KAAK,EAAE,EAAE;oBACT,KAAK,EAAE,EAAE;oBACT,IAAI,EAAE,CAAC;iBACR,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;IACH,CAAC;IAED,aAAa;QACX,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACrC,MAAM,SAAS,GAAY;YACzB,EAAE,EAAE,SAAS,CAAC,EAAE;YAChB,gCAAgC;YAChC,EAAE,EAAE,SAAS,CAAC,EAAE;YAChB,EAAE,EAAE,SAAS,CAAC,EAAE;YAChB,KAAK,EAAE,SAAS,CAAC,KAAK;YACtB,KAAK,EAAE,SAAS,CAAC,KAAK;YACtB,IAAI,EAAE,SAAS,CAAC,IAAI;SACrB,CAAC;QACF,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,cAAc;QACZ,OAAO;YACL,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;YACjB,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;YACjB,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;YACvB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;SACtB,CAAC;IACJ,CAAC;IAED,IAAI;QACF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,eAAe,CAAC,MAAe;QAC7B,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;YACjB,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;YACjB,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;YACjB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;YAClB,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;YAClB,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;YAClB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;SACtB;IAEH,CAAC;IAED,uBAAuB;IACvB,IAAI,EAAE;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IACD,IAAI,EAAE;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IACD,IAAI,EAAE;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAED,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC;IAC9C,CAAC;;gFAzLU,gBAAgB;gGAAhB,gBAAgB;QCnB7B,6EACI;QAAA,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACtB,gHACI;QAmFR,4DAAU;;QApFA,0DAAa;QAAb,2EAAa;;6FDiBV,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAC2B;AAC1B;AACjC;AACkB;AACc;;;;;;;;;ICHtD,0EACI;IADsC,sUAAuB;IAC7D,iFACI;IAAA,sEACJ;IAAA,4DAAiB;IACjB,iFACI;IAAA,sEACJ;IAAA,4DAAiB;IACjB,iFACI;IAAA,sEACJ;IAAA,4DAAiB;IACjB,iFACI;IAAA,sEACJ;IAAA,4DAAiB;IACjB,iFACI;IAAA,uEACJ;IAAA,4DAAiB;IACjB,kFACI;IAAA,uEACJ;IAAA,4DAAiB;IACjB,kFACI;IAAA,uEACJ;IAAA,4DAAiB;IACjB,iEACA;IAAA,2EACI;IAAA,8EAA6E;IAAjB,+TAAgB;IAAC,iEAAK;IAAA,4DAAS;IAC3F,8EAAgF;IAAA,0EAAc;IAAA,4DAAS;IAC3G,4DAAM;IACV,4DAAO;;;IA3Ba,sFAAqB;IAEU,0DAAoB;IAApB,qFAAoB;IAGnB,0DAAqB;IAArB,sFAAqB;IAGrB,0DAA6B;IAA7B,8FAA6B;IAGlC,0DAA6B;IAA7B,8FAA6B;IAG5B,0DAAyB;IAAzB,0FAAyB;IAGlB,0DAAwB;IAAxB,yFAAwB;IAGnC,0DAAyB;IAAzB,0FAAyB;IAKR,0DAA0B;IAA1B,2FAA0B;;ADZpF,MAAM,qBAAqB;IAMhC,YACU,EAAe,EACf,OAAmB,EACK,IAAS;QAFjC,OAAE,GAAF,EAAE,CAAa;QACf,YAAO,GAAP,OAAO,CAAY;QACK,SAAI,GAAJ,IAAI,CAAK;QALpC,WAAM,GAAG,KAAK,CAAC;IAKyB,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC9C,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;IACN,CAAC;IAED,WAAW;IACX,qCAAqC;IACrC,2BAA2B;IAC3B,6BAA6B;IAC7B,sCAAsC;IACtC,uBAAuB;IACvB,+DAA+D;IAC/D,2BAA2B;IAC3B,OAAO;IACP,mBAAmB;IACnB,4BAA4B;IAC5B,IAAI;IAEJ,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,6BAA6B;YAC7B,uBAAuB;YACvB,0BAA0B;YAC1B,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;iBACjD,IAAI,CACH,iEAAU,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;gBACzB,qEAAc,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,6BAA6B;gBAC7B,OAAO,+CAAE,CAAC,IAAmC,CAAC,CAAC;YACjD,CAAC,CAAC,CACH;iBACA,SAAS,CAAC,SAAS,CAAC,EAAE;gBACrB,IAAI,SAAS,CAAC,OAAO,EAAE;oBACrB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBACvB,eAAe;iBAEhB;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;oBACxD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;iBACxB;gBACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACtB,CAAC,CAAC,CAAC;SACN;aAAM;YACL,qEAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACpD;IACH,CAAC;IAED,UAAU,CAAC,MAAqB;QAC9B,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;SAC3C;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC3B,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBACxC,KAAK,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAC1C,aAAa,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,aAAa,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAClG,aAAa,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,aAAa,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAClG,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAC1F,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBACxF,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;aACnF,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;SACrB;IACH,CAAC;IAED,aAAa;QACX,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACrC,IAAI,SAAuB,CAAC;QAC5B,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACxB,SAAS,GAAG;gBACV,IAAI,EAAE,SAAS,CAAC,IAAI;gBACpB,KAAK,EAAE,SAAS,CAAC,KAAK;gBACtB,aAAa,EAAE,SAAS,CAAC,aAAa;gBACtC,aAAa,EAAE,SAAS,CAAC,aAAa;gBACtC,SAAS,EAAE,SAAS,CAAC,SAAS;gBAC9B,QAAQ,EAAE,SAAS,CAAC,QAAQ;gBAC5B,KAAK,EAAE,SAAS,CAAC,KAAK;gBACtB,SAAS,EAAE,KAAK;aACjB,CAAC;SACH;aAAM;YACL,SAAS,GAAG;gBACV,IAAI,EAAE,SAAS,CAAC,IAAI;gBACpB,KAAK,EAAE,SAAS,CAAC,KAAK;gBACtB,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;gBACvC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;gBACvC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;gBAC/B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAC7B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;gBACvB,SAAS,EAAE,KAAK;aACjB,CAAC;SACH;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,cAAc;QACZ,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;YACvB,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;YACtC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;YACtC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;YAC/B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC7B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;YACvB,SAAS,EAAE,KAAK;SAEjB,CAAC;IACJ,CAAC;IAED,IAAI;QACF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,uBAAuB;IACvB,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IACD,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC3C,CAAC;IACD,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC3C,CAAC;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC;IAC9C,CAAC;;0FA3JU,qBAAqB,kUAStB,wEAAe;qGATd,qBAAqB;QCflC,6EACI;QAAA,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACtB,oHACI;QA2BR,4DAAU;;QA5BA,0DAAa;QAAb,2EAAa;;6FDaV,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;sBAUI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEvB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACL;AACW;AAEP;AAEO;;;AAK1C,MAAM,UAAU;IAKrB;;QAEC;IACD,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IARD,WAAW;QACT,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAQD,yCAAyC;IACzC,+DAA+D;IAC/D,aAAa;IACb,wBAAwB;IACxB,8CAA8C;IAC9C,4CAA4C;IAC5C,WAAW;IACX,SAAS;IACT,IAAI;IAEG,QAAQ;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,kBAAkB,EAAE,EAAE,YAAY,EAAE,MAAgB,EAAE,CAAC;aACjF,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC;YAC1C,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAEM,kBAAkB;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,oBAAoB,CAAC;aAChD,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,yBAAyB,EAAE,MAAM,CAAC,CAAC;YAC5C,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,oBAAoB,EAAE,IAAI,CAAC;aACvD,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,0BAA0B,EAAE,MAAM,CAAC,CAAC;YAC7C,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,qBAAqB,CAAC;aACjD,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,0BAA0B,EAAE,MAAM,CAAC,CAAC;YAC7C,OAAO,IAAI,6DAAa,CAAU,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAEM,YAAY,CAAC,IAAa;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,qBAAqB,EAAE,IAAI,CAAC;aACxD,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC;YAC9C,uCAAuC;YACvC,4BAA4B;YAC5B,gCAAgC;YAChC,yDAAyD;YACzD,OAAO,IAAI,6DAAa,CAAU,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAyB,0BAA0B,CAAC,CAAC,CACjF,CAAC;IACN,CAAC;IAEM,aAAa;QAClB,iCAAiC;QACjC,sBAAsB;QACtB,6BAA6B;QAC7B,iDAAiD;QACjD,+BAA+B;QAC/B,iCAAiC;QACjC,wBAAwB;QACxB,uDAAuD;QACvD,6BAA6B;QAC7B,MAAM;QACN,uCAAuC;QAEvC,mBAAmB;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,0BAA0B,CAAC;aAC3D,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,+BAA+B,EAAE,MAAM,CAAC,CAAC;YAClD,OAAO,IAAI,6DAAa,CAAe,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3D,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAEM,iBAAiB,CAAC,IAAkB;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,0BAA0B,EAAE,IAAI,CAAC;aAClE,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,gCAAgC,EAAE,MAAM,CAAC,CAAC;YACnD,8CAA8C;YAC9C,iEAAiE;YACjE,wBAAwB;YACxB,OAAO,IAAI,6DAAa,CAAe,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3D,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAA8B,gCAAgC,CAAC,CAAC,CAC5F,CAAC;IACN,CAAC;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,mBAAmB,CAAC;aAC9C,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;YAC3C,OAAO,IAAI,6DAAa,CAAS,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACrD,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAEM,eAAe,CAAC,IAAY;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAwB,mBAAmB,EAAE,IAAI,CAAC;aACpE,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,yBAAyB,EAAE,MAAM,CAAC,CAAC;YAC5C,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAGM,OAAO;QACZ,MAAM,GAAG,GAAG,IAAI,qDAAM,EAAE,CAAC;QACzB,MAAM,MAAM,GAAG,IAAI,6DAAa,EAAU,CAAC;QAC3C,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;QAClB,OAAO,+CAAE,CAAC,MAAM,CAAC,CAAC;IACpB,CAAC;IAGM,QAAQ;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,WAAW,CAAC;aACtD,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;YACnC,OAAO,MAAM,CAAC,IAAI,CAAC;QACrB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,WAAW,CAAC;aACtD,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;YACnC,OAAO,MAAM,CAAC,IAAI,CAAC;QACrB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAEO,GAAG,CAAC,OAAe,EAAE,IAAS;QACpC,IAAI,IAAO,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACnB;IACH,CAAC;IAGD;;;;;KAKC;IACO,WAAW,CAAI,SAAS,GAAG,WAAW,EAAE,MAAU;QACxD,OAAO,CAAC,KAAU,EAAiB,EAAE;YAEnC,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,8DAA8D;YAC9D,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,YAAY,KAAK,CAAC,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;YAE1D,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;;oEA5LU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;6FAEP,UAAU;cAHtB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA,mCAAmC;AACsB;AACQ;AAEjE,qDAAqD;AAC9C,MAAM,wBAAwB,GAAG;IACtC,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,6EAAqB,EAAE,KAAK,EAAE,IAAI,EAAE;CAC7E,CAAC;;;;;;;;;;;;;ACPF;AAAA;AAAO,MAAM,aAAa;IAItB,YAAY,IAAQ,EAAE,UAAkB,EAAE,EAAE,UAAmB,IAAI;QAC/D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;CAMJ;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAA2C;AAEgB;;AAG3D,kEAAkE;AAE3D,MAAM,qBAAqB;IAE9B,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAE9C,uEAAuE;QACvE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;YACxB,GAAG,EAAE,wEAAW,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG;SACvC,CAAC,CAAC;QACH,yDAAyD;QACzD,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAClC,CAAC;;0FAXQ,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB;6FAArB,qBAAqB;cADjC,wDAAU;;;;;;;;;;;;;;ACPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE0C;;;;;;;ICA1F,sEACE;IAAA,oFACA;IAAA,gEACA;IAAA,gEACA;IAAA,iFAA0D;IAC5D,4DAAM;;;;IACN,sEACE;IAAA,2IACA;IAAA,qEACE;IAAA,qEAAI;IAAA,4GAAiD;IAAA,4DAAK;IAC1D,qEAAI;IAAA,oJAAyF;IAAA,4DAAK;IAClG,qEAAI;IAAA,oIAAyE;IAAA,4DAAK;IACpF,4DAAK;IACL,4EAAyF;IAA3C,2TAAoB;IAAuB,sEAAU;IAAA,4DAAS;IAC9G,4DAAM;;;IAD+D,0DAAqB;IAArB,sFAAqB;;;IAE1F,sEACE;IAAA,0FACF;IAAA,4DAAM;;ADTD,MAAM,eAAe;IAO1B,YACU,OAAmB,EACnB,WAA2B;QAD3B,YAAO,GAAP,OAAO,CAAY;QACnB,gBAAW,GAAX,WAAW,CAAgB;QAP9B,qBAAgB,GAAG,KAAK,CAAC;QACzB,6BAAwB,GAAG,IAAI,CAAC;QAChC,SAAI,GAAG,EAAE,CAAC;QACV,aAAQ,GAAG,KAAK,CAAC;IAKpB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACnD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;YAC/B,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;QACxC,CAAC,EACC,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAErB,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACrB,CAAC,EACC,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAErB,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1C,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,IAAI,MAAM,EAAE;gBACV,GAAG,GAAG,uKAAuK,CAAC;aAC/K;iBAAM;gBACL,GAAG,GAAG,8FAA8F,CAAC;aACtG;YACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,uGAAwB,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YAC5F,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAC3B,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACC,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;;8EApDU,eAAe;+FAAf,eAAe;QCV5B,6EACE;QAAA,qEAAI;QAAA,4EAAiB;QAAA,4DAAK;QAC1B,2GACE;QAKF,4GACE;QAQF,2GACE;QAEF,yEAAkB;QAAA,uDAAU;QAAA,4DAAM;QACpC,4DAAU;;QAnBH,0DAAgC;QAAhC,8FAAgC;QAMhC,0DAAqD;QAArD,uHAAqD;QASrD,0DAAsD;QAAtD,wHAAsD;QAGzC,0DAAU;QAAV,yEAAU;;6FDVjB,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AETD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE,kBAAkB;CAC9B,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section id=\"section-help\" class=\"container flex-fill\">\n    <h1>About</h1>\n    <h2>There is no 'i' in team.</h2>\n    <p>The device you're controlling was not built in a vaccum.</p>\n    <p>Special thanks go out to:</p>\n    <ul>\n        <li>Dave Davenport. My Yoda.</li>\n        <li>Dmitriy Sidorovich. Guru of the circuit board.</li>\n        <li>My family and friends. Life is easier with people who believe in you.</li>\n    </ul>\n\n    <h2>Coming Soon</h2>\n    <h3>We have tons of new stuff planned</h3>\n    <p>At Musica Pristina, we never stop innovating.</p>\n    <p>Stay tuned for exciting new features to be rolled out in future product updates.</p>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-support',\n  templateUrl: './support.component.html',\n  styleUrls: ['./support.component.scss']\n})\nexport class SupportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section id=\"section-network\" class=\"container flex-fill\">\n    <h1>Support</h1>\n    <h2>Contact Musica Pristina</h2>\n    <p>P: <a href=\"tel:919.494.1800\">919.494.1800</a></p>\n    <p><strong>E-Mail:</strong><br>\n        <a href=\"mailto:alwayslistening@musicapristina.com\">alwayslistening@musicapristina.com</a></p>\n    <p><strong>Remote Support</strong></p>\n    <p>Most issues that could arise can be addressed with a little email or telephone troubleshooting. If your issue is\n        with a network connected device, we can share screens and access your system remotely (with your permission) to\n        work out any issues you may be experiencing.</p>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AudioSetupComponent } from './audio-setup/audio-setup.component';\nimport { AboutComponent } from './Help/about/about.component';\nimport { SupportComponent } from './Help/support/support.component';\nimport { HomeComponent } from './home/home.component';\nimport { NetworkComponent } from './network/network.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { UpdateComponent } from './update/update.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'audio-setup', component: AudioSetupComponent },\n  {\n    path: 'help', children: [\n      { path: '', component: SupportComponent },\n      { path: 'about', component: AboutComponent },\n    ]\n  },\n  { path: 'network', component: NetworkComponent },\n  { path: 'registration', component: RegistrationComponent },\n  { path: 'update', component: UpdateComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, HostListener } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [\n    trigger('smoothCollapse', [\n      state('initial', style({\n        height: '0px',\n        overflow: 'hidden',\n        opacity: '0'\n      })),\n      state('final', style({\n        height: '180px',\n        //overflow: 'auto',\n        opacity: '1'\n      })),\n      transition('initial=>final', animate('450ms ease-out')),\n      transition('final=>initial', animate('750ms'))\n    ]),\n  ]\n})\nexport class AppComponent {\n\n  public navbarCollapsed = true;\n  public isMobile = false;\n\n  constructor(public route: ActivatedRoute) {\n    console.log(route);\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.isMobile = window.innerWidth < 992;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\">\n      <img src=\"assets/logo.png\" class=\"logo\">\n    </a>\n    <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" (click)=\"navbarCollapsed = !navbarCollapsed\"\n      [attr.aria-expanded]=\"!navbarCollapsed\" aria-controls=\"navbarContent\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div [ngbCollapse]=\"navbarCollapsed\" class=\"navbar-collapse\" id=\"navbarContent\">\n      <ul class=\"navbar-nav mr-auto\" [@smoothCollapse]=\"isMobile ? (navbarCollapsed ? 'initial' : 'final') : ''\">\n        <li [routerLinkActive]=\"['active']\" class=\"nav-item ml-1\">\n          <a class=\"nav-link\" [routerLink]=\"['/audio-setup']\" (click)=\"navbarCollapsed = true\">Audio Setup</a>\n        </li>\n        <li [routerLinkActive]=\"['active']\" class=\"nav-item ml-1\">\n          <a class=\"nav-link\" [routerLink]=\"['/network']\" (click)=\"navbarCollapsed = true\">Network Setup</a>\n        </li>\n        <li [routerLinkActive]=\"['active']\" class=\"nav-item ml-1\">\n          <a class=\"nav-link\" [routerLink]=\"['/registration']\" (click)=\"navbarCollapsed = true\">Registration</a>\n        </li>\n        <li [routerLinkActive]=\"['active']\" class=\"nav-item ml-1\">\n          <a class=\"nav-link\" [routerLink]=\"['/update']\" (click)=\"navbarCollapsed = true\">Update</a>\n        </li>\n        <li [routerLinkActive]=\"['active']\" class=\"nav-item ml-1\" ngbDropdown>\n          <a id=\"help\" class=\"nav-link\" style=\"cursor: pointer\" ngbDropdownToggle role=\"button\">Help</a>\n          <div ngbDropdownMenu aria-labelledby=\"help\" class=\"dropdown-menu navbar-dark\">\n            <a class=\"nav-item nav-link\" ngbDropdownItem [routerLink]=\"['/help']\" [routerLinkActive]=\"['active']\"\n              [routerLinkActiveOptions]=\"{exact: true}\">Support</a>\n            <a class=\"nav-link\" ngbDropdownItem [routerLink]=\"['/help/about']\" [routerLinkActive]=\"['active']\"\n              [routerLinkActiveOptions]=\"{exact: true}\">About</a>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AudioSetupComponent } from './audio-setup/audio-setup.component';\nimport { BottomSheetDataComponent } from './bottom-sheet-data/bottom-sheet-data.component';\nimport { AboutComponent } from './Help/about/about.component';\nimport { SupportComponent } from './Help/support/support.component';\nimport { HomeComponent } from './home/home.component';\nimport { NetworkComponent } from './network/network.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { ApiService } from './services/api.service';\nimport { httpInterceptorProviders } from './services/http-interceptors-barrel';\nimport { UpdateComponent } from './update/update.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AudioSetupComponent,\n    BottomSheetDataComponent,\n    RegistrationComponent,\n    HomeComponent,\n    NetworkComponent,\n    AboutComponent,\n    SupportComponent,\n    UpdateComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSliderModule,\n    HttpClientModule,\n  ],\n  providers: [{ provide: MAT_DIALOG_DATA, useValue: {} }, MatDialogModule, MatBottomSheet, ApiService, httpInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { BottomSheetDataComponent } from '../bottom-sheet-data/bottom-sheet-data.component';\nimport { FormValidation } from '../forms/form-validation';\nimport { Output } from '../models/output';\nimport { ApiService } from '../services/api.service';\nimport { ServiceResult } from '../services/service-result';\n\n@Component({\n  selector: 'app-audio-setup',\n  templateUrl: './audio-setup.component.html',\n  styleUrls: ['./audio-setup.component.scss']\n})\nexport class AudioSetupComponent implements OnInit {\n\n  public model: Output;\n  public theForm: FormGroup;\n  public saving = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private service: ApiService,\n    // public dialogRef: MatDialogRef<AudioSetupComponent>,\n    private bottomSheet: MatBottomSheet,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.service.getAudioConfig$().subscribe(result => {\n      this.createForm(result.data);\n    },\n      error => {\n        console.log(error);\n        this.createForm(null);\n      }\n\n    );\n  }\n\n  cancel() {\n    // this.dialogRef.close();\n  }\n\n  onSubmit() {\n    if (this.theForm.valid) {\n      this.saving = true;\n      this.service.putAudioConfig$(this.getFormValues())\n        .pipe(\n          catchError((err, caught) => {\n            FormValidation.parseSubmitErrors(err, this.theForm);\n            this.saving = false;\n            return of(null as ServiceResult<Output>);\n          })\n        )\n        .subscribe(result => {\n          if (result.success) {\n            this.bottomSheet\n              .open(BottomSheetDataComponent, { data: { message: 'The audio settings have been updated.', progress: false } });\n            // this.dialogRef.close();\n          } else {\n            this.bottomSheet.open(BottomSheetDataComponent, { data: { message: result.message, progress: false } });\n          }\n          this.saving = false;\n        });\n    } else {\n      FormValidation.validateAllFormFields(this.theForm);\n    }\n  }\n\n  createForm(model?: Output): void {\n    if (this.theForm) {\n      this.model = model;\n      this.theForm.reset(this.getModelValues());\n    } else {\n      if (model) {\n        this.theForm = this.fb.group({\n          output: model.output,\n          dop: model.dop,\n          volume: model.volume,\n          bufferDuration: model.bufferDuration\n        });\n        // console.log(model.xo);\n        // this.setXOIndex(model.xo);\n      } else {\n        this.theForm = this.fb.group({\n          output: 0,\n          dop: false,\n          volume: false,\n          bufferDuration: 0.04,\n        });\n      }\n      this.model = model;\n    }\n  }\n\n  getFormValues(): Output {\n    const formModel = this.theForm.value;\n    const saveModel: Output = {\n      output: formModel.output,\n      dop: formModel.dop,\n      volume: formModel.volume,\n      bufferDuration: formModel.bufferDuration,\n    };\n    return saveModel;\n  }\n\n  getModelValues(): any {\n    return {\n      output: this.model.output,\n      dop: this.model.dop,\n      volume: this.model.volume,\n      bufferDuration: this.model.bufferDuration,\n    };\n  }\n\n  undo(): void {\n    this.theForm.reset(this.model);\n  }\n\n  // Form Control Helpers\n  get output(): AbstractControl {\n    return this.theForm.get('output');\n  }\n  get dop(): AbstractControl {\n    return this.theForm.get('dop');\n  }\n  get volume(): AbstractControl {\n    return this.theForm.get('volume');\n  }\n  get bufferDuration(): AbstractControl {\n    return this.theForm.get('bufferDuration');\n  }\n\n  public onoff(value: boolean) {\n    return value ? 'ON' : 'OFF';\n  }\n\n  public get save_disabled() {\n    return this.theForm.pristine || this.saving;\n  }\n\n}\n","<section id=\"section-audio\" class=\"container flex-fill\">\n    <h1>Audio Setup</h1>\n    <form *ngIf=\"model\" [formGroup]=\"theForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group mt-3\">\n            <ng-template #popoverOutput>Select between the I<sup>2</sup>S based audio outputs and the USB output.\n                Unless you are using a USB DAC, you should choose <strong>I<sup>2</sup>S + AES/EBU + AES3id +\n                    S/PDIF</strong>.\n            </ng-template>\n            <label for=\"audio-output\" id=\"audio-outputlabel\">Output Interface</label>\n            <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverOutput\">\n                <mat-icon>info</mat-icon>\n            </span>\n            <br>\n            <mat-form-field>\n                <mat-select [formControl]=\"output\">\n                    <mat-option value=\"hw:0\">I<sup>2</sup>S + AES/EBU + AES3id + S/PDIF</mat-option>\n                    <mat-option value=\"hw:1\">USB</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form-group mt-3\">\n            <ng-template #popoverBuffer>Set the number of milliseconds of buffering that should happen in the A Cappella\n                III. Note that <strong>0.04</strong> is the typical setting. Use a larger value if you experience\n                clicks, pops or dropouts.\n            </ng-template>\n            <label for=\"audio-buffer-duration\" id=\"audio-buffer-durationlabel\">Audio Buffer</label>\n            <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverBuffer\">\n                <mat-icon>info</mat-icon>\n            </span>\n            <br>\n            <mat-slider thumbLabel tickInterval=\"0.25\" min=\"0.01\" max=\"0.1\" step=\".01\" [formControl]=\"bufferDuration\">\n            </mat-slider>\n        </div>\n\n        <div class=\"form-group mt-3\">\n            <ng-template #popoverDOP>If your DAC accepts Native DSD over USB, uncheck this box. If your DAC accepts\n                DoP over I<sup>2</sup>S, AES/EBU, AES3id or S/PDIF then check this box.\n            </ng-template>\n            <mat-checkbox [formControl]=\"dop\">DSD Over PCM (DoP)</mat-checkbox>\n            <span class=\"ml-1\" placement=\"top\" [ngbPopover]=\"popoverDOP\">\n                <mat-icon>info</mat-icon>\n            </span>\n        </div>\n\n        <div class=\"form-group mt-3\">\n            <ng-template #popoverVolume>Check this box to enable <strong>digital volume control</strong> through the\n                Roon interface.\n                Doing so make the audio signal bit perfect only at 100% volume in Roon.\n            </ng-template>\n            <mat-checkbox [formControl]=\"volume\">Roon\n                Volume Control\n            </mat-checkbox>\n            <span class=\"ml-1\" placement=\"top\" [ngbPopover]=\"popoverVolume\">\n                <mat-icon>info</mat-icon>\n            </span>\n        </div>\n\n        <div class=\"form-group form-actions\">\n            <button type=\"button\" class=\"btn btn-secondary btn-lg mr-2\" (click)=\"undo()\">Reset</button>\n            <button class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"save_disabled\">Save and apply</button>\n        </div>\n    </form>\n</section>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\n\n@Component({\n  selector: 'app-bottom-sheet-data',\n  templateUrl: './bottom-sheet-data.component.html',\n  styleUrls: ['./bottom-sheet-data.component.scss']\n})\nexport class BottomSheetDataComponent implements OnInit {\n\n  constructor(@Inject(MAT_BOTTOM_SHEET_DATA) public data: any) { }\n\n  public showProgress: boolean;\n\n  ngOnInit() {\n    console.log('BottomSheetDataComponent');\n    console.log(this.data);\n    console.log(this.data.message);\n    this.showProgress = this.data.progress;\n  }\n\n}\n","<h3>Notification</h3>\n<p>\n    {{ data.message }}\n</p>\n<mat-progress-bar mode=\"indeterminate\" *ngIf=\"showProgress\"></mat-progress-bar>","import { WebApiError } from \"./webapi-error\";\n\nexport class WebApi {\n    constructor() {\n        // this.hasSucceeded = json.hasSucceeded;\n        // this.messageAutoHide = json.messageAutoHide;\n        // this.messages = json.messages;\n        // this.modelState = json.modelState;\n    }\n\n    static parseError(error: any): WebApiError {\n        let ret: WebApiError = JSON.parse(JSON.stringify(error));\n        return ret;\n    }\n\n}","import { AbstractControl, FormGroup, FormControl } from \"@angular/forms\";\nimport { FormError } from \"../errors/form-error\";\nimport { WebApi } from \"../errors/webapi\";\nimport { WebApiError } from \"../errors/webapi-error\";\n\nexport class FormValidation {\n\n\n    public static getErrors(control: AbstractControl): FormError[] {\n        return Object.keys(control.errors)\n            .filter((error) => control.errors[error])\n            .map((error) => {\n                let params = control.errors[error];\n                return {\n                    error: error,\n                    params: params === true || params == {} ? null : params\n                };\n            });\n    }\n\n    public static findFieldControl(field: string, theForm: FormGroup): AbstractControl {\n        let control: AbstractControl;\n        if (field === 'base') {\n            control = theForm;\n        } else if (theForm.contains(field)) {\n            control = theForm.get(field);\n        } else if (field.match(/_id$/) && theForm.contains(field.substring(0, field.length - 3))) {\n            control = theForm.get(field.substring(0, field.length - 3));\n        } else if (field.indexOf('.') > 0) {\n            let group = theForm;\n            field.split('.').forEach((f) => {\n                if (group.contains(f)) {\n                    control = group.get(f);\n                    if (control instanceof FormGroup) group = control;\n                } else {\n                    control = group;\n                }\n            })\n        } else {\n            // Field is not defined in form but there is a validation error for it, set it globally\n            control = theForm;\n        }\n        return control;\n    }\n\n    private fetchFieldErrors(data: any, field: string): any {\n        const errors = {};\n        data[field].forEach((e) => {\n            let name: string = e.error;\n            delete e.error;\n            errors[name] = e;\n        });\n        return errors;\n    }\n\n\n    public static validateAllFormFields(formGroup: FormGroup) {\n        Object.keys(formGroup.controls).forEach(field => {\n            const control = formGroup.get(field);\n            if (control instanceof FormControl) {\n                control.markAsTouched({ onlySelf: true });\n            } else if (control instanceof FormGroup) {\n                FormValidation.validateAllFormFields(control);\n            }\n        });\n    }\n\n    public static parseSubmitErrors(reason: any, theForm: FormGroup) {\n        let err: WebApiError = WebApi.parseError(reason.error);\n        Object.keys(err.modelState).forEach(key => {\n            let notice = {};\n            notice[key] = err.modelState[key][0];\n            let control = FormValidation.findFieldControl(key, theForm);\n            control.setErrors(notice);\n        });\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"hero\">\n    <div class=\"container\">\n        <h1>Welcome to<br>your Musica Pristina<br>A Cappella III</h1>\n    </div>\n</div>","export enum SubnetMask {\n    \"128.0.0.0\" = 1,\n    \"192.0.0.0\",\n    \"224.0.0.0\",\n    \"240.0.0.0\",\n    \"248.0.0.0\",\n    \"252.0.0.0\",\n    \"254.0.0.0\",\n    \"255.0.0.0\",\n    \"255.128.0.0\",\n    \"255.192.0.0\",\n    \"255.224.0.0\",\n    \"255.240.0.0\",\n    \"255.248.0.0\",\n    \"255.252.0.0\",\n    \"255.254.0.0\",\n    \"255.255.0.0\",\n    \"255.255.128.0\",\n    \"255.255.192.0\",\n    \"255.255.224.0\",\n    \"255.255.240.0\",\n    \"255.255.248.0\",\n    \"255.255.252.0\",\n    \"255.255.254.0\",\n    \"255.255.255.0\",\n    \"255.255.255.128\",\n    \"255.255.255.192\",\n    \"255.255.255.224\",\n    \"255.255.255.240\",\n    \"255.255.255.248\",\n    \"255.255.255.252\",\n    \"255.255.255.254\",\n    \"255.255.255.255\"\n}","\nexport class Output {\n\n    public output = '';\n    public dop = false;\n    public volume = false;\n    public bufferDuration = 0.04;\n\n    constructor(jsonData?: Output) {\n        Object.assign(this, jsonData);\n    }\n\n}\n","import { KeyValue } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { BottomSheetDataComponent } from '../bottom-sheet-data/bottom-sheet-data.component';\nimport { FormValidation } from '../forms/form-validation';\nimport { NetworkType } from '../models/enum-network-type';\nimport { SubnetMask } from '../models/enum-subnet-mask';\nimport { Network } from '../models/network';\nimport { ApiService } from '../services/api.service';\nimport { ServiceResult } from '../services/service-result';\n\n@Component({\n  selector: 'app-network',\n  templateUrl: './network.component.html',\n  styleUrls: ['./network.component.scss']\n})\nexport class NetworkComponent implements OnInit {\n\n  public model: Network;\n  public theForm: FormGroup;\n  public masks: KeyValue<string, string>[] = [];\n  public saving = false;\n\n  get static(): boolean {\n    return (this.type.value === 1);\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private service: ApiService,\n    // public dialogRef: MatDialogRef<NetworkComponent>,\n    private bottomSheet: MatBottomSheet,\n    // @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n\n    const values = Object.keys(SubnetMask)\n      .filter(key => !isNaN(Number(key)))\n      .map(key => {\n        const value = SubnetMask[key];\n        // let kvp = { key, val } (KeyValue<number, string>)\n        return { key, value };\n      });\n    this.masks = values;\n  }\n\n  ngOnInit() {\n    this.service.network$().subscribe(result => {\n      this.createForm(result.data);\n    },\n      error => {\n        console.log(error);\n        this.createForm(null);\n      }\n    );\n  }\n\n  cancel() {\n    // this.dialogRef.close();\n  }\n\n  onSubmit() {\n    if (this.theForm.valid) {\n      this.saving = true;\n      this.model = this.getFormValues();\n      this.service.networkSave$(this.model)\n        .pipe(\n          catchError((err, caught) => {\n            FormValidation.parseSubmitErrors(err, this.theForm);\n            this.saving = false;\n            return of(null as ServiceResult<Network>);\n          })\n        )\n        .subscribe(result => {\n          if (result.success) {\n            if (this.model.type === NetworkType.DHCP) {\n              const msg = `We're unable to get the new IP Address when you change to DHCP. We'll try taking you to 'mp.local', but you may need to look up the IP in your router.`;\n              this.bottomSheet.open(BottomSheetDataComponent, { data: { message: msg, progress: true } });\n              setTimeout(() => {\n                window.location.href = 'http://mp.local';\n              }, 2000);\n            } else {\n              if (result.data.ip !== window.location.hostname) {\n                const msg = `We're updating the ip address to '${result.data.ip}'. We'll redirect you there shortly.`;\n                this.bottomSheet.open(BottomSheetDataComponent, { data: { message: msg, progress: true } });\n                setTimeout(() => {\n                  window.location.href = 'http://' + result.data.ip;\n                }, 2000);\n              } else {\n                this.bottomSheet\n                  .open(BottomSheetDataComponent, { data: { message: 'The network settings have been updated.', progress: false } });\n              }\n            }\n          } else {\n            this.bottomSheet.open(BottomSheetDataComponent, { data: { message: result.message, progress: false } });\n          }\n          this.saving = false;\n        });\n    } else {\n      FormValidation.validateAllFormFields(this.theForm);\n    }\n  }\n\n  createForm(model?: Network): void {\n    if (this.theForm) {\n      this.model = model;\n      this.theForm.reset(this.getModelValues());\n    } else {\n      if (model) {\n        this.theForm = this.fb.group({\n          ip: new FormControl({ value: model.ip, disabled: model.type === NetworkType.DHCP }),\n          sm: new FormControl({ value: model.sm, disabled: model.type === NetworkType.DHCP }),\n          gw: new FormControl({ value: model.gw, disabled: model.type === NetworkType.DHCP }),\n          dns_1: new FormControl({ value: model.dns_1, disabled: model.type === NetworkType.DHCP }),\n          dns_2: new FormControl({ value: model.dns_2, disabled: model.type === NetworkType.DHCP }),\n          type: model.type\n        });\n\n        this.type.valueChanges\n          .subscribe(result => {\n            this.setControlState(this.type.value === NetworkType.Static);\n          })\n      } else {\n        this.theForm = this.fb.group({\n          ip: '',\n          sm: '',\n          gw: '',\n          dns_1: '',\n          dns_2: '',\n          type: 0\n        });\n      }\n      this.model = model;\n    }\n  }\n\n  getFormValues(): Network {\n    const formModel = this.theForm.value;\n    const saveModel: Network = {\n      ip: formModel.ip,\n      // sm: SubnetMask[formModel.sm],\n      sm: formModel.sm,\n      gw: formModel.gw,\n      dns_1: formModel.dns_1,\n      dns_2: formModel.dns_2,\n      type: formModel.type\n    };\n    return saveModel;\n  }\n\n  getModelValues(): Network {\n    return {\n      ip: this.model.ip,\n      sm: this.model.sm,\n      gw: this.model.gw,\n      dns_1: this.model.dns_1,\n      dns_2: this.model.dns_2,\n      type: this.model.type\n    };\n  }\n\n  undo(): void {\n    this.theForm.reset(this.model);\n  }\n\n  setControlState(enable: boolean) {\n    if (enable) {\n      this.ip.enable();\n      this.sm.enable();\n      this.gw.enable();\n      this.dns_1.enable();\n    } else {\n      this.ip.disable();\n      this.sm.disable();\n      this.gw.disable();\n      this.dns_1.disable();\n    }\n\n  }\n\n  // Form Control Helpers\n  get ip(): AbstractControl {\n    return this.theForm.get('ip');\n  }\n  get sm(): AbstractControl {\n    return this.theForm.get('sm');\n  }\n  get gw(): AbstractControl {\n    return this.theForm.get('gw');\n  }\n  get dns_1(): AbstractControl {\n    return this.theForm.get('dns_1');\n  }\n  get dns_2(): AbstractControl {\n    return this.theForm.get('dns_2');\n  }\n  get type(): AbstractControl {\n    return this.theForm.get('type');\n  }\n\n  public get save_disabled() {\n    return this.theForm.pristine || this.saving;\n  }\n\n}\n","<section id=\"section-network\" class=\"container flex-fill\">\n    <h1>Network Setup</h1>\n    <form *ngIf=\"model\" [formGroup]=\"theForm\" (ngSubmit)=\"onSubmit()\" class=\"detail-component\" novalidate>\n        <div class=\"form-group mt-3\">\n            <ng-template #popoverType>Select between <strong>DHCP</strong>, where your router assigns the A Cappella III\n                an IP Address, and <strong>Static</strong>, where you assign the IP address manually.\n            </ng-template>\n            <label for=\"type\" id=\"typelabel\">Network Type</label>\n            <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverType\">\n                <mat-icon>info</mat-icon>\n            </span>\n            <br>\n            <mat-form-field>\n                <mat-select [formControl]=\"type\">\n                    <mat-option [value]=\"0\">DHCP</mat-option>\n                    <mat-option [value]=\"1\">Static</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form-group mt-3\">\n            <ng-template #popoverIP>Enter your desired <strong>IP Address</strong> when the network type is set to\n                <strong>Static</strong>. (Note: When set to <strong>DHCP</strong>, this field is disabled and the\n                current IP address is seen here.\n            </ng-template>\n            <label for=\"type\" id=\"typelabel\">IP Address</label>\n            <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverIP\">\n                <mat-icon>info</mat-icon>\n            </span>\n            <br>\n            <mat-form-field>\n                <input matInput [formControl]=\"ip\">\n            </mat-form-field>\n        </div>\n\n        <div class=\"-form-group\">\n            <ng-template #popoverSM>Enter your desired <strong>Subnet Mask</strong> when the network type is set to\n                <strong>Static</strong>. (Note: When set to <strong>DHCP</strong>, this field is disabled and the\n                current <strong>Subnet Mask</strong> is seen here.\n            </ng-template>\n            <label for=\"type\" id=\"typelabel\">Subnet Mask</label>\n            <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverSM\">\n                <mat-icon>info</mat-icon>\n            </span>\n            <br>\n            <mat-form-field>\n                <mat-select [formControl]=\"sm\">\n                    <mat-option *ngFor=\"let mask of masks\" [value]=\"mask.value\">{{ mask.value }}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"-form-group\">\n            <ng-template #popoverGW>Enter your desired <strong>Gateway</strong> when the network type is set to\n                <strong>Static</strong>. (Note: When set to <strong>DHCP</strong>, this field is disabled and the\n                current <strong>Gateway</strong> is seen here.\n            </ng-template>\n            <label for=\"gw\" id=\"gwlabel\">Gateway</label>\n            <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverGW\">\n                <mat-icon>info</mat-icon>\n            </span>\n            <br>\n            <mat-form-field>\n                <input matInput name=\"gw\" [formControl]=\"gw\">\n            </mat-form-field>\n        </div>\n\n        <div class=\"-form-group\">\n            <ng-template #popoverDNS>Enter your desired <strong>DNS Server</strong> when the network type is set to\n                <strong>Static</strong>. (Note: When set to <strong>DHCP</strong>, this field is disabled and the\n                current <strong>DNS Server</strong> is seen here.\n            </ng-template>\n            <label for=\"dns\" id=\"dnslabel\">DNS Server</label>\n            <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverGW\">\n                <mat-icon>info</mat-icon>\n            </span>\n            <br>\n            <mat-form-field>\n                <input matInput name=\"dns\" [formControl]=\"dns_1\">\n            </mat-form-field>\n        </div>\n        <div class=\"form-group form-actions mt-3\">\n            <button type=\"button\" class=\"btn btn-secondary btn-lg mr-2\" (click)=\"undo()\">Reset</button>\n            <button class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"save_disabled\">Save and apply</button>\n        </div>\n    </form>\n</section>","import { Component, Inject, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { FormValidation } from '../forms/form-validation';\nimport { Registration } from '../models/registration';\nimport { ApiService } from '../services/api.service';\nimport { ServiceResult } from '../services/service-result';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  public model: Registration;\n  public theForm: FormGroup;\n  public saving = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private service: ApiService,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.service.registration$().subscribe(result => {\n      this.createForm(result.data);\n    });\n  }\n\n  cancel() {\n  }\n\n  // save() {\n  //   const data = new Registration();\n  //   data.name = this.name;\n  //   data.email = this.email;\n  //   console.log(\"registration save\");\n  //   console.log(data);\n  //   this.service.registrationSave$(data).subscribe(result => {\n  //     console.log(result);\n  //   })\n  //   //TODO: notify\n  //   this.dialogRef.close();\n  // }\n\n  onSubmit() {\n    if (this.theForm.valid) {\n      this.saving = true;\n      // this.errorMessages = null;\n      // this.saving$ = true;\n      // this.submitted$ = true;\n      this.service.registrationSave$(this.getFormValues())\n        .pipe(\n          catchError((err, caught) => {\n            FormValidation.parseSubmitErrors(err, this.theForm);\n            this.saving = false;\n            // return Observable.empty();\n            return of(null as ServiceResult<Registration>);\n          })\n        )\n        .subscribe(savedData => {\n          if (savedData.success) {\n            console.log(savedData);\n            // TODO: notify\n\n          } else {\n            console.log('.subscribe(savedData => { HAS NO DATA???');\n            console.log(savedData);\n          }\n          this.saving = false;\n        });\n    } else {\n      FormValidation.validateAllFormFields(this.theForm);\n    }\n  }\n\n  createForm(_model?: Registration): void {\n    if (this.theForm) {\n      this.model = _model;\n      this.theForm.reset(this.getModelValues());\n    } else {\n      this.theForm = this.fb.group({\n        name: [_model.name, Validators.required],\n        email: [_model.email, Validators.required],\n        purchase_date: [{ value: _model.purchase_date, disabled: !_model.first_use }, Validators.required],\n        serial_number: [{ value: _model.serial_number, disabled: !_model.first_use }, Validators.required],\n        device_id: [{ value: _model.device_id, disabled: !_model.first_use }, Validators.required],\n        firmware: [{ value: _model.firmware, disabled: !_model.first_use }, Validators.required],\n        model: [{ value: _model.model, disabled: !_model.first_use }, Validators.required]\n      });\n\n      this.model = _model;\n    }\n  }\n\n  getFormValues(): Registration {\n    const formModel = this.theForm.value;\n    let saveModel: Registration;\n    if (this.model.first_use) {\n      saveModel = {\n        name: formModel.name,\n        email: formModel.email,\n        purchase_date: formModel.purchase_date,\n        serial_number: formModel.serial_number,\n        device_id: formModel.device_id,\n        firmware: formModel.firmware,\n        model: formModel.model,\n        first_use: false\n      };\n    } else {\n      saveModel = {\n        name: formModel.name,\n        email: formModel.email,\n        purchase_date: this.model.purchase_date,\n        serial_number: this.model.serial_number,\n        device_id: this.model.device_id,\n        firmware: this.model.firmware,\n        model: this.model.model,\n        first_use: false\n      };\n    }\n    return saveModel;\n  }\n\n  getModelValues(): any {\n    return {\n      name: this.model.name,\n      email: this.model.email,\n      purchaseDate: this.model.purchase_date,\n      serialNumber: this.model.serial_number,\n      device_id: this.model.device_id,\n      firmware: this.model.firmware,\n      model: this.model.model,\n      first_use: false\n\n    };\n  }\n\n  undo(): void {\n    this.theForm.reset(this.model);\n  }\n\n  // Form Control Helpers\n  get name(): AbstractControl {\n    return this.theForm.get('name');\n  }\n  get email(): AbstractControl {\n    return this.theForm.get('email');\n  }\n  get purchase_date(): AbstractControl {\n    return this.theForm.get('purchase_date');\n  }\n  get serial_number(): AbstractControl {\n    return this.theForm.get('serial_number');\n  }\n  get device_id(): AbstractControl {\n    return this.theForm.get('device_id');\n  }\n  get firmware(): AbstractControl {\n    return this.theForm.get('firmware');\n  }\n  get unitmodel(): AbstractControl {\n    return this.theForm.get('model');\n  }\n\n  public get save_disabled() {\n    return this.theForm.pristine || this.saving;\n  }\n\n}\n","<section id=\"section-network\" class=\"container flex-fill\">\n    <h1>Registration </h1>\n    <form *ngIf=\"model\" [formGroup]=\"theForm\" (ngSubmit)=\"onSubmit()\" class=\"detail-component\" novalidate>\n        <mat-form-field>\n            <input matInput placeholder=\"Owner's Name\" [formControl]=\"name\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Owner's Email\" [formControl]=\"email\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Purchase Date\" [formControl]=\"purchase_date\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Serial #\" [formControl]=\"serial_number\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Device ID\" [formControl]=\"device_id\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Firmware Version\" [formControl]=\"firmware\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Model\" [formControl]=\"unitmodel\">\n        </mat-form-field>\n        <br>\n        <div class=\"form-group form-actions\">\n            <button type=\"button\" class=\"btn btn-secondary btn-lg mr-2\" (click)=\"undo()\">Reset</button>\n            <button class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"save_disabled\">Save and apply</button>\n        </div>\n    </form>\n</section>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Network } from '../models/network';\nimport { Output } from '../models/output';\nimport { Registration } from '../models/registration';\nimport { ServiceResult } from './service-result';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  getMaxRate$() {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n\t* Construct a new Base Service for a Type (Table) and its ReadOnly partner.\n\t*/\n  constructor(private http: HttpClient) {\n  }\n\n  // public home$(): Observable<MPConfig> {\n  //   return this.http.get<ServiceResult<MPConfig>>('/api/home')\n  //     .pipe(\n  //       map(result => {\n  //         this.log('GET: /api/home', result);\n  //         return new MPConfig(result.data);\n  //       })\n  //     );\n  // }\n\n  public getMotd$(): Observable<string> {\n    return this.http.get<string>('/api/system/motd', { responseType: 'text' as 'json' })\n      .pipe(\n        map(result => {\n          this.log('GET: /api/system/motd', result);\n          return result;\n        })\n      );\n  }\n\n  public getUpdateRequired$(): Observable<boolean> {\n    return this.http.get<boolean>('/api/system/update')\n      .pipe(\n        map(result => {\n          this.log('GET: /api/system/update', result);\n          return result;\n        })\n      );\n  }\n\n  public doUpdate$(): Observable<boolean> {\n    return this.http.post<boolean>('/api/system/update', null)\n      .pipe(\n        map(result => {\n          this.log('POST: /api/system/update', result);\n          return result;\n        })\n      );\n  }\n\n  public network$(): Observable<ServiceResult<Network>> {\n    return this.http.get<Network>('/api/network/config')\n      .pipe(\n        map(result => {\n          this.log('GET: /api/network/config', result);\n          return new ServiceResult<Network>(result, '', true);\n        })\n      );\n  }\n\n  public networkSave$(data: Network): Observable<ServiceResult<Network>> {\n    return this.http.post<Network>('/api/network/config', data)\n      .pipe(\n        map(result => {\n          this.log('POST: /api/network/config', result);\n          // let data = new Network(result.data);\n          // let msg = result.message;\n          // let success = result.success;\n          // return new ServiceResult<Network>(data, msg, success);\n          return new ServiceResult<Network>(result, '', true);\n        }),\n        catchError(this.handleError<ServiceResult<Network>>('PUT: /api/network/config')),\n      );\n  }\n\n  public registration$(): Observable<ServiceResult<Registration>> {\n    // const reg = new Registration({\n    //   first_use: false,\n    //   name: 'Musica Pristina',\n    //   email: 'alwayslistening@musicapristina.com',\n    //   serial_number: '01197520',\n    //   purchase_date: '2020-01-01',\n    //   firmware: 'v3.0.1',\n    //   device_id: 'ad4ed521-ac25-4ab2-92fa-829f9cb65f34',\n    //   model: 'A Cappella III',\n    // });\n    // const rslt = new ServiceResult(reg);\n\n    // return of(rslt);\n    return this.http.get<Registration>('/api/system/registration')\n      .pipe(\n        map(result => {\n          this.log('GET: /api/system/registration', result);\n          return new ServiceResult<Registration>(result, '', true);\n        })\n      );\n  }\n\n  public registrationSave$(data: Registration): Observable<ServiceResult<Registration>> {\n    return this.http.post<Registration>('/api/system/registration', data)\n      .pipe(\n        map(result => {\n          this.log('POST: /api/system/registration', result);\n          // const data = new Registration(result.data);\n          // const msg = 'You\\'ve successfully updated your registration.';\n          // const success = true;\n          return new ServiceResult<Registration>(result, '', true);\n        }),\n        catchError(this.handleError<ServiceResult<Registration>>('POST: /api/system/registration')),\n      );\n  }\n\n  public getAudioConfig$(): Observable<ServiceResult<Output>> {\n    return this.http.get<Output>('/api/audio/config')\n      .pipe(\n        map(result => {\n          this.log('GET: /api/audio/config', result);\n          return new ServiceResult<Output>(result, '', true);\n        })\n      );\n  }\n\n  public putAudioConfig$(data: Output): Observable<ServiceResult<Output>> {\n    return this.http.post<ServiceResult<Output>>('/api/audio/config', data)\n      .pipe(\n        map(result => {\n          this.log('POST: /api/audio/config', result);\n          return result;\n        })\n      );\n  }\n\n\n  public ouput1$(): Observable<ServiceResult<Output>> {\n    const ret = new Output();\n    const result = new ServiceResult<Output>();\n    result.data = ret;\n    return of(result);\n  }\n\n\n  public oscOCXO$(): Observable<boolean> {\n    return this.http.get<ServiceResult<boolean>>('/api/ocxo')\n      .pipe(\n        map(result => {\n          this.log('GET: /api/ocxo', result);\n          return result.data;\n        })\n      );\n  }\n\n  public oscDFXO$(): Observable<boolean> {\n    return this.http.get<ServiceResult<boolean>>('/api/dfxo')\n      .pipe(\n        map(result => {\n          this.log('GET: /api/dfxo', result);\n          return result.data;\n        })\n      );\n  }\n\n  private log(message: string, data: any) {\n    if (1 === 1) {\n      console.log(message);\n      console.log(data);\n    }\n  }\n\n\n  /**\n * Handle Http operation that failed.\n * Let the app continue.\n * @param operation - name of the operation that failed\n * @param result - optional value to return as the observable result\n */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`, result);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n}\n","/* \"Barrel\" of Http Interceptors */\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ServiceURLInterceptor } from './serviceurl-interceptor';\n\n/** Http interceptor providers in outside-in order */\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: ServiceURLInterceptor, multi: true },\n];\n","export class ServiceResult<T> {\n\n    constructor()\n    constructor(data: T, message?: string, success?: boolean)\n    constructor(data?: T, message: string = '', success: boolean = true) {\n        this.data = data;\n        this.message = message;\n        this.success = success;\n    }\n\n    public data: T;\n    public message: string;\n    public success: boolean;\n\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class ServiceURLInterceptor implements HttpInterceptor {\n\n    intercept(req: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpEvent<any>> {\n        // clone request and replace 'http://' with 'https://' at the same time\n        console.log(req.url);\n        const secureReq = req.clone({\n            url: environment.prefixURL + req.url\n        });\n        // send the cloned, \"secure\" request to the next handler.\n        return next.handle(secureReq);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { BottomSheetDataComponent } from '../bottom-sheet-data/bottom-sheet-data.component';\nimport { ApiService } from '../services/api.service';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss']\n})\nexport class UpdateComponent implements OnInit {\n\n  public isUpdateRequired = false;\n  public isCheckingUpdateRequired = true;\n  public motd = \"\";\n  public updating = false;\n\n  constructor(\n    private service: ApiService,\n    private bottomSheet: MatBottomSheet,\n  ) { }\n\n  ngOnInit() {\n    this.service.getUpdateRequired$().subscribe(result => {\n      this.isUpdateRequired = result;\n      this.isCheckingUpdateRequired = false;\n    },\n      error => {\n        console.log(error);\n\n      }\n    );\n\n    this.service.getMotd$().subscribe(result => {\n      this.motd = result;\n    },\n      error => {\n        console.log(error);\n\n      }\n    );\n  }\n\n  public doUpdate() {\n    this.updating = true;\n    this.service.doUpdate$().subscribe(result => {\n      let msg = \"\";\n      if (result) {\n        msg = `We got the update and are applying it now. We'll refresh the page, but if the update takes a long time, you may need to refresh the page yourself in about 2 minutes.`;\n      } else {\n        msg = `Seems like you might already be up to date. We're going to refresh the page and check again.`;\n      }\n      this.bottomSheet.open(BottomSheetDataComponent, { data: { message: msg, progress: true } });\n      setTimeout(() => {\n        this.updating = true;\n        window.location.reload();\n      }, 2000);\n    },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n}\n","<section id=\"section-network\" class=\"container flex-fill\">\n  <h1>Check for Updates</h1>\n  <div *ngIf=\"isCheckingUpdateRequired\">\n    Checking for updates...\n    <br>\n    <br>\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n  </div>\n  <div *ngIf=\"!isCheckingUpdateRequired && isUpdateRequired\">\n    We found an update. Click the button below to update your system. Please note:\n    <ul>\n      <li>This may take a while: 2 minutes is not unlikely.</li>\n      <li>Losing power now would be bad: please wait to update if there's a risk of a power outage.</li>\n      <li>Updates are good: we roll out new features and fixes through our updates.</li>\n    </ul>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"doUpdate()\" [disabled]=\"updating\">Update Now</button>\n  </div>\n  <div *ngIf=\"!isCheckingUpdateRequired && !isUpdateRequired\">\n    Looks like you're up to date.\n  </div>\n  <pre class=\"mt-5\">{{ motd }}</pre>\n</section>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  prefixURL: 'http://10.0.0.57'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}