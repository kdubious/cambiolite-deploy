{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Help/about/about.component.ts","webpack:///src/app/Help/about/about.component.html","webpack:///src/app/Help/support/support.component.ts","webpack:///src/app/Help/support/support.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/audio-setup/audio-setup.component.ts","webpack:///src/app/audio-setup/audio-setup.component.html","webpack:///src/app/bottom-sheet-data/bottom-sheet-data.component.ts","webpack:///src/app/bottom-sheet-data/bottom-sheet-data.component.html","webpack:///src/app/errors/webapi.ts","webpack:///src/app/forms/form-validation.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/models/enum-subnet-mask.ts","webpack:///src/app/models/output.ts","webpack:///src/app/network/network.component.ts","webpack:///src/app/network/network.component.html","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/http-interceptors-barrel.ts","webpack:///src/app/services/service-result.ts","webpack:///src/app/services/serviceurl-interceptor.ts","webpack:///src/app/update/update.component.ts","webpack:///src/app/update/update.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","SupportComponent","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","route","navbarCollapsed","isMobile","console","log","event","window","innerWidth","height","overflow","opacity","animations","AppModule","provide","useValue","declarations","providers","bootstrap","AudioSetupComponent","fb","service","bottomSheet","data","saving","getAudioConfig$","subscribe","result","createForm","error","theForm","valid","putAudioConfig$","getFormValues","pipe","err","caught","parseSubmitErrors","success","open","message","progress","validateAllFormFields","model","reset","getModelValues","group","output","dop","volume","bufferDuration","maxBits","formModel","value","saveModel","get","pristine","BottomSheetDataComponent","showProgress","WebApi","ret","JSON","parse","stringify","FormValidation","field","errors","forEach","name","control","Object","filter","map","params","contains","match","substring","length","indexOf","split","f","formGroup","controls","markAsTouched","onlySelf","reason","parseError","modelState","key","notice","findFieldControl","setErrors","HomeComponent","SubnetMask","Output","jsonData","assign","NetworkComponent","masks","values","isNaN","Number","network$","networkSave$","type","msg","setTimeout","location","href","ip","hostname","disabled","sm","gw","dns_1","dns_2","valueChanges","setControlState","enable","disable","RegistrationComponent","registration$","registrationSave$","savedData","_model","required","email","purchase_date","first_use","serial_number","device_id","firmware","purchaseDate","serialNumber","ApiService","http","responseType","post","handleError","operation","providedIn","httpInterceptorProviders","useClass","multi","ServiceResult","ServiceURLInterceptor","next","url","secureReq","clone","production","origin","prefixURL","handle","UpdateComponent","isUpdateRequired","isCheckingUpdateRequired","motd","updating","sub1","getUpdateRequired$","subs","push","sub2","getMotd$","sub","unsubscribe","doUpdate$","reload","environment","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section id=\"section-help\" class=\"container flex-fill\">\n  <h1>About</h1>\n  <h2>There is no 'i' in team.</h2>\n  <p>The device you're controlling was not built in a vacuum.</p>\n  <p>Special thanks go out to:</p>\n  <ul>\n    <li>Dave Davenport &mdash; My Yoda. He fielded most questions with excellent answers, and a few with \"you gotta try\n      it.\"</li>\n    <li>Dmitriy Sidorovich &mdash; Guru of the circuit board. He designed, or improved upon, many of the circuits in use\n      today.</li>\n    <li>My family and friends. Life is easier with people who believe in you.</li>\n  </ul>\n\n  <h2>Coming Soon</h2>\n  <h3>We have tons of new stuff planned</h3>\n  <p>At Musica Pristina, we never stop innovating.</p>\n  <p>Stay tuned for exciting new features to be rolled out in future product updates.</p>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-support',\n  templateUrl: './support.component.html',\n  styleUrls: ['./support.component.scss']\n})\nexport class SupportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section id=\"section-network\" class=\"container flex-fill\">\n    <h1>Support</h1>\n    <h2>Contact Musica Pristina</h2>\n    <p>P: <a href=\"tel:919.494.1800\">919.494.1800</a></p>\n    <p><strong>E-Mail:</strong><br>\n        <a href=\"mailto:alwayslistening@musicapristina.com\">alwayslistening@musicapristina.com</a></p>\n    <p><strong>Remote Support</strong></p>\n    <p>Most issues that could arise can be addressed with a little email or telephone troubleshooting. If your issue is\n        with a network connected device, we can share screens and access your system remotely (with your permission) to\n        work out any issues you may be experiencing.</p>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AudioSetupComponent } from './audio-setup/audio-setup.component';\nimport { AboutComponent } from './Help/about/about.component';\nimport { SupportComponent } from './Help/support/support.component';\nimport { HomeComponent } from './home/home.component';\nimport { NetworkComponent } from './network/network.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { UpdateComponent } from './update/update.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'audio-setup', component: AudioSetupComponent },\n  {\n    path: 'help', children: [\n      { path: '', component: SupportComponent },\n      { path: 'about', component: AboutComponent },\n    ]\n  },\n  { path: 'network', component: NetworkComponent },\n  { path: 'registration', component: RegistrationComponent },\n  { path: 'update', component: UpdateComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, HostListener } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [\n    trigger('smoothCollapse', [\n      state('initial', style({\n        height: '0px',\n        overflow: 'hidden',\n        opacity: '0'\n      })),\n      state('final', style({\n        height: '180px',\n        //overflow: 'auto',\n        opacity: '1'\n      })),\n      transition('initial=>final', animate('450ms ease-out')),\n      transition('final=>initial', animate('750ms'))\n    ]),\n  ]\n})\nexport class AppComponent {\n\n  public navbarCollapsed = true;\n  public isMobile = false;\n\n  constructor(public route: ActivatedRoute) {\n    console.log(route);\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.isMobile = window.innerWidth < 992;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\">\n      <img src=\"assets/logo.png\" class=\"logo\">\n    </a>\n    <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" (click)=\"navbarCollapsed = !navbarCollapsed\"\n      [attr.aria-expanded]=\"!navbarCollapsed\" aria-controls=\"navbarContent\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div [ngbCollapse]=\"navbarCollapsed\" class=\"navbar-collapse\" id=\"navbarContent\">\n      <ul class=\"navbar-nav mr-auto\" [@smoothCollapse]=\"isMobile ? (navbarCollapsed ? 'initial' : 'final') : ''\">\n        <li [routerLinkActive]=\"['active']\" class=\"nav-item ml-1\">\n          <a class=\"nav-link\" [routerLink]=\"['/audio-setup']\" (click)=\"navbarCollapsed = true\">Audio Setup</a>\n        </li>\n        <li [routerLinkActive]=\"['active']\" class=\"nav-item ml-1\">\n          <a class=\"nav-link\" [routerLink]=\"['/network']\" (click)=\"navbarCollapsed = true\">Network Setup</a>\n        </li>\n        <li [routerLinkActive]=\"['active']\" class=\"nav-item ml-1\">\n          <a class=\"nav-link\" [routerLink]=\"['/registration']\" (click)=\"navbarCollapsed = true\">Registration</a>\n        </li>\n        <li [routerLinkActive]=\"['active']\" class=\"nav-item ml-1\">\n          <a class=\"nav-link\" [routerLink]=\"['/update']\" (click)=\"navbarCollapsed = true\">Update</a>\n        </li>\n        <li [routerLinkActive]=\"['active']\" class=\"nav-item ml-1\" ngbDropdown>\n          <a id=\"help\" class=\"nav-link\" style=\"cursor: pointer\" ngbDropdownToggle role=\"button\">Help</a>\n          <div ngbDropdownMenu aria-labelledby=\"help\" class=\"dropdown-menu navbar-dark\">\n            <a class=\"nav-item nav-link\" ngbDropdownItem [routerLink]=\"['/help']\" [routerLinkActive]=\"['active']\"\n              [routerLinkActiveOptions]=\"{exact: true}\">Support</a>\n            <a class=\"nav-link\" ngbDropdownItem [routerLink]=\"['/help/about']\" [routerLinkActive]=\"['active']\"\n              [routerLinkActiveOptions]=\"{exact: true}\">About</a>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AudioSetupComponent } from './audio-setup/audio-setup.component';\nimport { BottomSheetDataComponent } from './bottom-sheet-data/bottom-sheet-data.component';\nimport { AboutComponent } from './Help/about/about.component';\nimport { SupportComponent } from './Help/support/support.component';\nimport { HomeComponent } from './home/home.component';\nimport { NetworkComponent } from './network/network.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { ApiService } from './services/api.service';\nimport { httpInterceptorProviders } from './services/http-interceptors-barrel';\nimport { UpdateComponent } from './update/update.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AudioSetupComponent,\n    BottomSheetDataComponent,\n    RegistrationComponent,\n    HomeComponent,\n    NetworkComponent,\n    AboutComponent,\n    SupportComponent,\n    UpdateComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSliderModule,\n    HttpClientModule,\n  ],\n  providers: [{ provide: MAT_DIALOG_DATA, useValue: {} }, MatDialogModule, MatBottomSheet, ApiService, httpInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { AbstractControl, FormBuilder, FormGroup } from \"@angular/forms\";\nimport { MatBottomSheet } from \"@angular/material/bottom-sheet\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { of } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { BottomSheetDataComponent } from \"../bottom-sheet-data/bottom-sheet-data.component\";\nimport { FormValidation } from \"../forms/form-validation\";\nimport { Output } from \"../models/output\";\nimport { ApiService } from \"../services/api.service\";\nimport { ServiceResult } from \"../services/service-result\";\n\n@Component({\n  selector: \"app-audio-setup\",\n  templateUrl: \"./audio-setup.component.html\",\n  styleUrls: [\"./audio-setup.component.scss\"],\n})\nexport class AudioSetupComponent implements OnInit {\n  public model: Output;\n  public theForm: FormGroup;\n  public saving = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private service: ApiService,\n    // public dialogRef: MatDialogRef<AudioSetupComponent>,\n    private bottomSheet: MatBottomSheet,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit() {\n    this.service.getAudioConfig$().subscribe(\n      (result) => {\n        this.createForm(result.data);\n      },\n      (error) => {\n        console.log(error);\n        this.createForm(null);\n      }\n    );\n  }\n\n  cancel() {\n    // this.dialogRef.close();\n  }\n\n  onSubmit() {\n    if (this.theForm.valid) {\n      this.saving = true;\n      this.service\n        .putAudioConfig$(this.getFormValues())\n        .pipe(\n          catchError((err, caught) => {\n            FormValidation.parseSubmitErrors(err, this.theForm);\n            this.saving = false;\n            return of(null as ServiceResult<Output>);\n          })\n        )\n        .subscribe((result) => {\n          if (result.success) {\n            this.bottomSheet.open(BottomSheetDataComponent, {\n              data: {\n                message: \"The audio settings have been updated.\",\n                progress: false,\n              },\n            });\n            // this.dialogRef.close();\n          } else {\n            this.bottomSheet.open(BottomSheetDataComponent, {\n              data: { message: result.message, progress: false },\n            });\n          }\n          this.saving = false;\n        });\n    } else {\n      FormValidation.validateAllFormFields(this.theForm);\n    }\n  }\n\n  createForm(model?: Output): void {\n    if (this.theForm) {\n      this.model = model;\n      this.theForm.reset(this.getModelValues());\n    } else {\n      if (model) {\n        this.theForm = this.fb.group({\n          output: model.output,\n          dop: model.dop,\n          volume: model.volume,\n          bufferDuration: model.bufferDuration,\n          maxBits: model.maxBits,\n        });\n        // console.log(model.xo);\n        // this.setXOIndex(model.xo);\n      } else {\n        this.theForm = this.fb.group({\n          output: 0,\n          dop: false,\n          volume: false,\n          bufferDuration: 0.04,\n          maxBits: 32,\n        });\n      }\n      this.model = model;\n    }\n  }\n\n  getFormValues(): Output {\n    const formModel = this.theForm.value;\n    const saveModel: Output = {\n      output: formModel.output,\n      dop: formModel.dop,\n      volume: formModel.volume,\n      bufferDuration: formModel.bufferDuration,\n      maxBits: formModel.maxBits,\n    };\n    return saveModel;\n  }\n\n  getModelValues(): any {\n    return {\n      output: this.model.output,\n      dop: this.model.dop,\n      volume: this.model.volume,\n      bufferDuration: this.model.bufferDuration,\n      maxBits: this.model.maxBits,\n    };\n  }\n\n  undo(): void {\n    this.theForm.reset(this.model);\n  }\n\n  // Form Control Helpers\n  get output(): AbstractControl {\n    return this.theForm.get(\"output\");\n  }\n  get dop(): AbstractControl {\n    return this.theForm.get(\"dop\");\n  }\n  get volume(): AbstractControl {\n    return this.theForm.get(\"volume\");\n  }\n  get bufferDuration(): AbstractControl {\n    return this.theForm.get(\"bufferDuration\");\n  }\n  get maxBits(): AbstractControl {\n    return this.theForm.get(\"maxBits\");\n  }\n\n  public onoff(value: boolean) {\n    return value ? \"ON\" : \"OFF\";\n  }\n\n  public get save_disabled() {\n    return this.theForm.pristine || this.saving;\n  }\n}\n","<section id=\"section-audio\" class=\"container flex-fill\">\n  <h1>Audio Setup</h1>\n  <form *ngIf=\"model\" [formGroup]=\"theForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group mt-3\">\n      <ng-template #popoverOutput>Select between the I<sup>2</sup>S based audio outputs and the USB output.\n        Unless you are using a USB DAC, you should choose <strong>I<sup>2</sup>S + AES/EBU + AES3id +\n          S/PDIF</strong>.\n      </ng-template>\n      <label for=\"audio-output\" id=\"audio-outputlabel\">Output Interface</label>\n      <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverOutput\">\n        <mat-icon>info</mat-icon>\n      </span>\n      <br>\n      <mat-form-field>\n        <mat-select [formControl]=\"output\">\n          <mat-option value=\"hw:0\">I<sup>2</sup>S + AES/EBU + AES3id + S/PDIF</mat-option>\n          <mat-option value=\"hw:1\">USB</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-group mt-3\">\n      <ng-template #popoverBuffer>Set the number of milliseconds of buffering that should happen in the A Cappella\n        III. Note that <strong>0.04</strong> is the typical setting. Use a larger value if you experience\n        clicks, pops or dropouts.\n      </ng-template>\n      <label for=\"audio-buffer-duration\" id=\"audio-buffer-durationlabel\">Audio Buffer</label>\n      <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverBuffer\">\n        <mat-icon>info</mat-icon>\n      </span>\n      <br>\n      <mat-slider thumbLabel tickInterval=\"0.25\" min=\"0.01\" max=\"0.1\" step=\".01\" [formControl]=\"bufferDuration\">\n      </mat-slider>\n    </div>\n\n    <div class=\"form-group mt-3\">\n      <ng-template #popoverDOP>If your DAC accepts Native DSD over USB, uncheck this box. If your DAC accepts\n        DoP over I<sup>2</sup>S, AES/EBU, AES3id or S/PDIF then check this box.\n      </ng-template>\n      <mat-checkbox [formControl]=\"dop\">DSD Over PCM (DoP)</mat-checkbox>\n      <span class=\"ml-1\" placement=\"top\" [ngbPopover]=\"popoverDOP\">\n        <mat-icon>info</mat-icon>\n      </span>\n    </div>\n\n    <div class=\"form-group mt-3\">\n      <ng-template #popoverVolume>Check this box to enable <strong>digital volume control</strong> through the\n        Roon interface. Doing so make the audio signal bit perfect only at 100% volume in Roon.\n      </ng-template>\n      <mat-checkbox [formControl]=\"volume\">Roon\n        Volume Control\n      </mat-checkbox>\n      <span class=\"ml-1\" placement=\"top\" [ngbPopover]=\"popoverVolume\">\n        <mat-icon>info</mat-icon>\n      </span>\n    </div>\n\n    <div class=\"form-group mt-3\">\n      <ng-template #popoverMaxBits>Select 32 unless you know your DAC is limited to 24 bits.\n      </ng-template>\n      <mat-form-field>\n        <mat-select [formControl]=\"maxBits\">\n          <mat-option value=\"32\">32 bit</mat-option>\n          <mat-option value=\"24\">24 bit</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-checkbox [formControl]=\"\">Roon\n        Max Bits\n      </mat-checkbox>\n      <span class=\"ml-1\" placement=\"top\" [ngbPopover]=\"popoverMaxBits\">\n        <mat-icon>info</mat-icon>\n      </span>\n    </div>\n\n    <div class=\"form-group form-actions\">\n      <button type=\"button\" class=\"btn btn-secondary btn-lg mr-2\" (click)=\"undo()\">Reset</button>\n      <button class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"save_disabled\">Save and apply</button>\n    </div>\n  </form>\n</section>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\n\n@Component({\n  selector: 'app-bottom-sheet-data',\n  templateUrl: './bottom-sheet-data.component.html',\n  styleUrls: ['./bottom-sheet-data.component.scss']\n})\nexport class BottomSheetDataComponent implements OnInit {\n\n  constructor(@Inject(MAT_BOTTOM_SHEET_DATA) public data: any) { }\n\n  public showProgress: boolean;\n\n  ngOnInit() {\n    console.log('BottomSheetDataComponent');\n    console.log(this.data);\n    console.log(this.data.message);\n    this.showProgress = this.data.progress;\n  }\n\n}\n","<h3>Notification</h3>\n<p>\n    {{ data.message }}\n</p>\n<mat-progress-bar mode=\"indeterminate\" *ngIf=\"showProgress\"></mat-progress-bar>","import { WebApiError } from \"./webapi-error\";\n\nexport class WebApi {\n    constructor() {\n        // this.hasSucceeded = json.hasSucceeded;\n        // this.messageAutoHide = json.messageAutoHide;\n        // this.messages = json.messages;\n        // this.modelState = json.modelState;\n    }\n\n    static parseError(error: any): WebApiError {\n        let ret: WebApiError = JSON.parse(JSON.stringify(error));\n        return ret;\n    }\n\n}","import { AbstractControl, FormGroup, FormControl } from \"@angular/forms\";\nimport { FormError } from \"../errors/form-error\";\nimport { WebApi } from \"../errors/webapi\";\nimport { WebApiError } from \"../errors/webapi-error\";\n\nexport class FormValidation {\n\n\n    public static getErrors(control: AbstractControl): FormError[] {\n        return Object.keys(control.errors)\n            .filter((error) => control.errors[error])\n            .map((error) => {\n                let params = control.errors[error];\n                return {\n                    error: error,\n                    params: params === true || params == {} ? null : params\n                };\n            });\n    }\n\n    public static findFieldControl(field: string, theForm: FormGroup): AbstractControl {\n        let control: AbstractControl;\n        if (field === 'base') {\n            control = theForm;\n        } else if (theForm.contains(field)) {\n            control = theForm.get(field);\n        } else if (field.match(/_id$/) && theForm.contains(field.substring(0, field.length - 3))) {\n            control = theForm.get(field.substring(0, field.length - 3));\n        } else if (field.indexOf('.') > 0) {\n            let group = theForm;\n            field.split('.').forEach((f) => {\n                if (group.contains(f)) {\n                    control = group.get(f);\n                    if (control instanceof FormGroup) group = control;\n                } else {\n                    control = group;\n                }\n            })\n        } else {\n            // Field is not defined in form but there is a validation error for it, set it globally\n            control = theForm;\n        }\n        return control;\n    }\n\n    private fetchFieldErrors(data: any, field: string): any {\n        const errors = {};\n        data[field].forEach((e) => {\n            let name: string = e.error;\n            delete e.error;\n            errors[name] = e;\n        });\n        return errors;\n    }\n\n\n    public static validateAllFormFields(formGroup: FormGroup) {\n        Object.keys(formGroup.controls).forEach(field => {\n            const control = formGroup.get(field);\n            if (control instanceof FormControl) {\n                control.markAsTouched({ onlySelf: true });\n            } else if (control instanceof FormGroup) {\n                FormValidation.validateAllFormFields(control);\n            }\n        });\n    }\n\n    public static parseSubmitErrors(reason: any, theForm: FormGroup) {\n        let err: WebApiError = WebApi.parseError(reason.error);\n        Object.keys(err.modelState).forEach(key => {\n            let notice = {};\n            notice[key] = err.modelState[key][0];\n            let control = FormValidation.findFieldControl(key, theForm);\n            control.setErrors(notice);\n        });\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"hero\">\n    <div class=\"container\">\n        <h1>Welcome to<br>your Musica Pristina<br>A Cappella III</h1>\n    </div>\n</div>","export enum SubnetMask {\n    \"128.0.0.0\" = 1,\n    \"192.0.0.0\",\n    \"224.0.0.0\",\n    \"240.0.0.0\",\n    \"248.0.0.0\",\n    \"252.0.0.0\",\n    \"254.0.0.0\",\n    \"255.0.0.0\",\n    \"255.128.0.0\",\n    \"255.192.0.0\",\n    \"255.224.0.0\",\n    \"255.240.0.0\",\n    \"255.248.0.0\",\n    \"255.252.0.0\",\n    \"255.254.0.0\",\n    \"255.255.0.0\",\n    \"255.255.128.0\",\n    \"255.255.192.0\",\n    \"255.255.224.0\",\n    \"255.255.240.0\",\n    \"255.255.248.0\",\n    \"255.255.252.0\",\n    \"255.255.254.0\",\n    \"255.255.255.0\",\n    \"255.255.255.128\",\n    \"255.255.255.192\",\n    \"255.255.255.224\",\n    \"255.255.255.240\",\n    \"255.255.255.248\",\n    \"255.255.255.252\",\n    \"255.255.255.254\",\n    \"255.255.255.255\"\n}","export class Output {\n  public output = \"\";\n  public dop = false;\n  public volume = false;\n  public bufferDuration = 0.04;\n  public maxBits = 32;\n\n  constructor(jsonData?: Output) {\n    Object.assign(this, jsonData);\n  }\n}\n","import { KeyValue } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { BottomSheetDataComponent } from '../bottom-sheet-data/bottom-sheet-data.component';\nimport { FormValidation } from '../forms/form-validation';\nimport { NetworkType } from '../models/enum-network-type';\nimport { SubnetMask } from '../models/enum-subnet-mask';\nimport { Network } from '../models/network';\nimport { ApiService } from '../services/api.service';\nimport { ServiceResult } from '../services/service-result';\n\n@Component({\n  selector: 'app-network',\n  templateUrl: './network.component.html',\n  styleUrls: ['./network.component.scss']\n})\nexport class NetworkComponent implements OnInit {\n\n  public model: Network;\n  public theForm: FormGroup;\n  public masks: KeyValue<string, string>[] = [];\n  public saving = false;\n\n  get static(): boolean {\n    return (this.type.value === 1);\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private service: ApiService,\n    // public dialogRef: MatDialogRef<NetworkComponent>,\n    private bottomSheet: MatBottomSheet,\n    // @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n\n    const values = Object.keys(SubnetMask)\n      .filter(key => !isNaN(Number(key)))\n      .map(key => {\n        const value = SubnetMask[key];\n        // let kvp = { key, val } (KeyValue<number, string>)\n        return { key, value };\n      });\n    this.masks = values;\n  }\n\n  ngOnInit() {\n    this.service.network$().subscribe(result => {\n      this.createForm(result.data);\n    },\n      error => {\n        console.log(error);\n        this.createForm(null);\n      }\n    );\n  }\n\n  cancel() {\n    // this.dialogRef.close();\n  }\n\n  onSubmit() {\n    if (this.theForm.valid) {\n      this.saving = true;\n      this.model = this.getFormValues();\n      this.service.networkSave$(this.model)\n        .pipe(\n          catchError((err, caught) => {\n            FormValidation.parseSubmitErrors(err, this.theForm);\n            this.saving = false;\n            return of(null as ServiceResult<Network>);\n          })\n        )\n        .subscribe(result => {\n          if (result.success) {\n            if (this.model.type === NetworkType.DHCP) {\n              const msg = `We're unable to get the new IP Address when you change to DHCP. We'll try taking you to 'mp.local', but you may need to look up the IP in your router.`;\n              this.bottomSheet.open(BottomSheetDataComponent, { data: { message: msg, progress: true } });\n              setTimeout(() => {\n                window.location.href = 'http://mp.local';\n              }, 2000);\n            } else {\n              if (result.data.ip !== window.location.hostname) {\n                const msg = `We're updating the ip address to '${result.data.ip}'. We'll redirect you there shortly.`;\n                this.bottomSheet.open(BottomSheetDataComponent, { data: { message: msg, progress: true } });\n                setTimeout(() => {\n                  window.location.href = 'http://' + result.data.ip;\n                }, 2000);\n              } else {\n                this.bottomSheet\n                  .open(BottomSheetDataComponent, { data: { message: 'The network settings have been updated.', progress: false } });\n              }\n            }\n          } else {\n            this.bottomSheet.open(BottomSheetDataComponent, { data: { message: result.message, progress: false } });\n          }\n          this.saving = false;\n        });\n    } else {\n      FormValidation.validateAllFormFields(this.theForm);\n    }\n  }\n\n  createForm(model?: Network): void {\n    if (this.theForm) {\n      this.model = model;\n      this.theForm.reset(this.getModelValues());\n    } else {\n      if (model) {\n        this.theForm = this.fb.group({\n          ip: new FormControl({ value: model.ip, disabled: model.type === NetworkType.DHCP }),\n          sm: new FormControl({ value: model.sm, disabled: model.type === NetworkType.DHCP }),\n          gw: new FormControl({ value: model.gw, disabled: model.type === NetworkType.DHCP }),\n          dns_1: new FormControl({ value: model.dns_1, disabled: model.type === NetworkType.DHCP }),\n          dns_2: new FormControl({ value: model.dns_2, disabled: model.type === NetworkType.DHCP }),\n          type: model.type\n        });\n\n        this.type.valueChanges\n          .subscribe(result => {\n            this.setControlState(this.type.value === NetworkType.Static);\n          })\n      } else {\n        this.theForm = this.fb.group({\n          ip: '',\n          sm: '',\n          gw: '',\n          dns_1: '',\n          dns_2: '',\n          type: 0\n        });\n      }\n      this.model = model;\n    }\n  }\n\n  getFormValues(): Network {\n    const formModel = this.theForm.value;\n    const saveModel: Network = {\n      ip: formModel.ip,\n      // sm: SubnetMask[formModel.sm],\n      sm: formModel.sm,\n      gw: formModel.gw,\n      dns_1: formModel.dns_1,\n      dns_2: formModel.dns_2,\n      type: formModel.type\n    };\n    return saveModel;\n  }\n\n  getModelValues(): Network {\n    return {\n      ip: this.model.ip,\n      sm: this.model.sm,\n      gw: this.model.gw,\n      dns_1: this.model.dns_1,\n      dns_2: this.model.dns_2,\n      type: this.model.type\n    };\n  }\n\n  undo(): void {\n    this.theForm.reset(this.model);\n  }\n\n  setControlState(enable: boolean) {\n    if (enable) {\n      this.ip.enable();\n      this.sm.enable();\n      this.gw.enable();\n      this.dns_1.enable();\n    } else {\n      this.ip.disable();\n      this.sm.disable();\n      this.gw.disable();\n      this.dns_1.disable();\n    }\n\n  }\n\n  // Form Control Helpers\n  get ip(): AbstractControl {\n    return this.theForm.get('ip');\n  }\n  get sm(): AbstractControl {\n    return this.theForm.get('sm');\n  }\n  get gw(): AbstractControl {\n    return this.theForm.get('gw');\n  }\n  get dns_1(): AbstractControl {\n    return this.theForm.get('dns_1');\n  }\n  get dns_2(): AbstractControl {\n    return this.theForm.get('dns_2');\n  }\n  get type(): AbstractControl {\n    return this.theForm.get('type');\n  }\n\n  public get save_disabled() {\n    return this.theForm.pristine || this.saving;\n  }\n\n}\n","<section id=\"section-network\" class=\"container flex-fill\">\n    <h1>Network Setup</h1>\n    <form *ngIf=\"model\" [formGroup]=\"theForm\" (ngSubmit)=\"onSubmit()\" class=\"detail-component\" novalidate>\n        <div class=\"form-group mt-3\">\n            <ng-template #popoverType>Select between <strong>DHCP</strong>, where your router assigns the A Cappella III\n                an IP Address, and <strong>Static</strong>, where you assign the IP address manually.\n            </ng-template>\n            <label for=\"type\" id=\"typelabel\">Network Type</label>\n            <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverType\">\n                <mat-icon>info</mat-icon>\n            </span>\n            <br>\n            <mat-form-field>\n                <mat-select [formControl]=\"type\">\n                    <mat-option [value]=\"0\">DHCP</mat-option>\n                    <mat-option [value]=\"1\">Static</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form-group mt-3\">\n            <ng-template #popoverIP>Enter your desired <strong>IP Address</strong> when the network type is set to\n                <strong>Static</strong>. (Note: When set to <strong>DHCP</strong>, this field is disabled and the\n                current IP address is seen here.\n            </ng-template>\n            <label for=\"type\" id=\"typelabel\">IP Address</label>\n            <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverIP\">\n                <mat-icon>info</mat-icon>\n            </span>\n            <br>\n            <mat-form-field>\n                <input matInput [formControl]=\"ip\">\n            </mat-form-field>\n        </div>\n\n        <div class=\"-form-group\">\n            <ng-template #popoverSM>Enter your desired <strong>Subnet Mask</strong> when the network type is set to\n                <strong>Static</strong>. (Note: When set to <strong>DHCP</strong>, this field is disabled and the\n                current <strong>Subnet Mask</strong> is seen here.\n            </ng-template>\n            <label for=\"type\" id=\"typelabel\">Subnet Mask</label>\n            <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverSM\">\n                <mat-icon>info</mat-icon>\n            </span>\n            <br>\n            <mat-form-field>\n                <mat-select [formControl]=\"sm\">\n                    <mat-option *ngFor=\"let mask of masks\" [value]=\"mask.value\">{{ mask.value }}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"-form-group\">\n            <ng-template #popoverGW>Enter your desired <strong>Gateway</strong> when the network type is set to\n                <strong>Static</strong>. (Note: When set to <strong>DHCP</strong>, this field is disabled and the\n                current <strong>Gateway</strong> is seen here.\n            </ng-template>\n            <label for=\"gw\" id=\"gwlabel\">Gateway</label>\n            <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverGW\">\n                <mat-icon>info</mat-icon>\n            </span>\n            <br>\n            <mat-form-field>\n                <input matInput name=\"gw\" [formControl]=\"gw\">\n            </mat-form-field>\n        </div>\n\n        <div class=\"-form-group\">\n            <ng-template #popoverDNS>Enter your desired <strong>DNS Server</strong> when the network type is set to\n                <strong>Static</strong>. (Note: When set to <strong>DHCP</strong>, this field is disabled and the\n                current <strong>DNS Server</strong> is seen here.\n            </ng-template>\n            <label for=\"dns\" id=\"dnslabel\">DNS Server</label>\n            <span class=\"ml-1\" placement=\"bottom\" [ngbPopover]=\"popoverGW\">\n                <mat-icon>info</mat-icon>\n            </span>\n            <br>\n            <mat-form-field>\n                <input matInput name=\"dns\" [formControl]=\"dns_1\">\n            </mat-form-field>\n        </div>\n        <div class=\"form-group form-actions mt-3\">\n            <button type=\"button\" class=\"btn btn-secondary btn-lg mr-2\" (click)=\"undo()\">Reset</button>\n            <button class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"save_disabled\">Save and apply</button>\n        </div>\n    </form>\n</section>","import { Component, Inject, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { FormValidation } from '../forms/form-validation';\nimport { Registration } from '../models/registration';\nimport { ApiService } from '../services/api.service';\nimport { ServiceResult } from '../services/service-result';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  public model: Registration;\n  public theForm: FormGroup;\n  public saving = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private service: ApiService,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.service.registration$().subscribe(result => {\n      this.createForm(result.data);\n    });\n  }\n\n  cancel() {\n  }\n\n  // save() {\n  //   const data = new Registration();\n  //   data.name = this.name;\n  //   data.email = this.email;\n  //   console.log(\"registration save\");\n  //   console.log(data);\n  //   this.service.registrationSave$(data).subscribe(result => {\n  //     console.log(result);\n  //   })\n  //   //TODO: notify\n  //   this.dialogRef.close();\n  // }\n\n  onSubmit() {\n    if (this.theForm.valid) {\n      this.saving = true;\n      // this.errorMessages = null;\n      // this.saving$ = true;\n      // this.submitted$ = true;\n      this.service.registrationSave$(this.getFormValues())\n        .pipe(\n          catchError((err, caught) => {\n            FormValidation.parseSubmitErrors(err, this.theForm);\n            this.saving = false;\n            // return Observable.empty();\n            return of(null as ServiceResult<Registration>);\n          })\n        )\n        .subscribe(savedData => {\n          if (savedData.success) {\n            console.log(savedData);\n            // TODO: notify\n\n          } else {\n            console.log('.subscribe(savedData => { HAS NO DATA???');\n            console.log(savedData);\n          }\n          this.saving = false;\n        });\n    } else {\n      FormValidation.validateAllFormFields(this.theForm);\n    }\n  }\n\n  createForm(_model?: Registration): void {\n    if (this.theForm) {\n      this.model = _model;\n      this.theForm.reset(this.getModelValues());\n    } else {\n      this.theForm = this.fb.group({\n        name: [_model.name, Validators.required],\n        email: [_model.email, Validators.required],\n        purchase_date: [{ value: _model.purchase_date, disabled: !_model.first_use }, Validators.required],\n        serial_number: [{ value: _model.serial_number, disabled: !_model.first_use }, Validators.required],\n        device_id: [{ value: _model.device_id, disabled: !_model.first_use }, Validators.required],\n        firmware: [{ value: _model.firmware, disabled: !_model.first_use }, Validators.required],\n        model: [{ value: _model.model, disabled: !_model.first_use }, Validators.required]\n      });\n\n      this.model = _model;\n    }\n  }\n\n  getFormValues(): Registration {\n    const formModel = this.theForm.value;\n    let saveModel: Registration;\n    if (this.model.first_use) {\n      saveModel = {\n        name: formModel.name,\n        email: formModel.email,\n        purchase_date: formModel.purchase_date,\n        serial_number: formModel.serial_number,\n        device_id: formModel.device_id,\n        firmware: formModel.firmware,\n        model: formModel.model,\n        first_use: false\n      };\n    } else {\n      saveModel = {\n        name: formModel.name,\n        email: formModel.email,\n        purchase_date: this.model.purchase_date,\n        serial_number: this.model.serial_number,\n        device_id: this.model.device_id,\n        firmware: this.model.firmware,\n        model: this.model.model,\n        first_use: false\n      };\n    }\n    return saveModel;\n  }\n\n  getModelValues(): any {\n    return {\n      name: this.model.name,\n      email: this.model.email,\n      purchaseDate: this.model.purchase_date,\n      serialNumber: this.model.serial_number,\n      device_id: this.model.device_id,\n      firmware: this.model.firmware,\n      model: this.model.model,\n      first_use: false\n\n    };\n  }\n\n  undo(): void {\n    this.theForm.reset(this.model);\n  }\n\n  // Form Control Helpers\n  get name(): AbstractControl {\n    return this.theForm.get('name');\n  }\n  get email(): AbstractControl {\n    return this.theForm.get('email');\n  }\n  get purchase_date(): AbstractControl {\n    return this.theForm.get('purchase_date');\n  }\n  get serial_number(): AbstractControl {\n    return this.theForm.get('serial_number');\n  }\n  get device_id(): AbstractControl {\n    return this.theForm.get('device_id');\n  }\n  get firmware(): AbstractControl {\n    return this.theForm.get('firmware');\n  }\n  get unitmodel(): AbstractControl {\n    return this.theForm.get('model');\n  }\n\n  public get save_disabled() {\n    return this.theForm.pristine || this.saving;\n  }\n\n}\n","<section id=\"section-network\" class=\"container flex-fill\">\n    <h1>Registration </h1>\n    <form *ngIf=\"model\" [formGroup]=\"theForm\" (ngSubmit)=\"onSubmit()\" class=\"detail-component\" novalidate>\n        <mat-form-field>\n            <input matInput placeholder=\"Owner's Name\" [formControl]=\"name\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Owner's Email\" [formControl]=\"email\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Purchase Date\" [formControl]=\"purchase_date\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Serial #\" [formControl]=\"serial_number\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Device ID\" [formControl]=\"device_id\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Firmware Version\" [formControl]=\"firmware\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Model\" [formControl]=\"unitmodel\">\n        </mat-form-field>\n        <br>\n        <div class=\"form-group form-actions\">\n            <button type=\"button\" class=\"btn btn-secondary btn-lg mr-2\" (click)=\"undo()\">Reset</button>\n            <button class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"save_disabled\">Save and apply</button>\n        </div>\n    </form>\n</section>","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\nimport { Network } from \"../models/network\";\nimport { Output } from \"../models/output\";\nimport { Registration } from \"../models/registration\";\nimport { ServiceResult } from \"./service-result\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ApiService {\n  getMaxRate$() {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  /**\n   * Construct a new Base Service for a Type (Table) and its ReadOnly partner.\n   */\n  constructor(private http: HttpClient) {}\n\n  // public home$(): Observable<MPConfig> {\n  //   return this.http.get<ServiceResult<MPConfig>>('/api/home')\n  //     .pipe(\n  //       map(result => {\n  //         this.log('GET: /api/home', result);\n  //         return new MPConfig(result.data);\n  //       })\n  //     );\n  // }\n\n  public getMotd$(): Observable<string> {\n    return this.http\n      .get<string>(\"/api/system/motd\", { responseType: \"text\" as \"json\" })\n      .pipe(\n        map((result) => {\n          this.log(\"GET: /api/system/motd\", result);\n          return result;\n        })\n      );\n  }\n\n  public getUpdateRequired$(): Observable<boolean> {\n    return this.http.get<boolean>(\"/api/system/update\").pipe(\n      map((result) => {\n        this.log(\"GET: /api/system/update\", result);\n        return result;\n      })\n    );\n  }\n\n  public doUpdate$(): Observable<boolean> {\n    return this.http.post<boolean>(\"/api/system/update\", null).pipe(\n      map((result) => {\n        this.log(\"POST: /api/system/update\", result);\n        return result;\n      })\n    );\n  }\n\n  public network$(): Observable<ServiceResult<Network>> {\n    return this.http.get<Network>(\"/api/network/config\").pipe(\n      map((result) => {\n        this.log(\"GET: /api/network/config\", result);\n        return new ServiceResult<Network>(result, \"\", true);\n      })\n    );\n  }\n\n  public networkSave$(data: Network): Observable<ServiceResult<Network>> {\n    return this.http.post<Network>(\"/api/network/config\", data).pipe(\n      map((result) => {\n        this.log(\"POST: /api/network/config\", result);\n        // let data = new Network(result.data);\n        // let msg = result.message;\n        // let success = result.success;\n        // return new ServiceResult<Network>(data, msg, success);\n        return new ServiceResult<Network>(result, \"\", true);\n      }),\n      catchError(\n        this.handleError<ServiceResult<Network>>(\"PUT: /api/network/config\")\n      )\n    );\n  }\n\n  public registration$(): Observable<ServiceResult<Registration>> {\n    // const reg = new Registration({\n    //   first_use: false,\n    //   name: 'Musica Pristina',\n    //   email: 'alwayslistening@musicapristina.com',\n    //   serial_number: '01197520',\n    //   purchase_date: '2020-01-01',\n    //   firmware: 'v3.0.1',\n    //   device_id: 'ad4ed521-ac25-4ab2-92fa-829f9cb65f34',\n    //   model: 'A Cappella III',\n    // });\n    // const rslt = new ServiceResult(reg);\n\n    // return of(rslt);\n    return this.http.get<Registration>(\"/api/system/registration\").pipe(\n      map((result) => {\n        this.log(\"GET: /api/system/registration\", result);\n        return new ServiceResult<Registration>(result, \"\", true);\n      })\n    );\n  }\n\n  public registrationSave$(\n    data: Registration\n  ): Observable<ServiceResult<Registration>> {\n    return this.http.post<Registration>(\"/api/system/registration\", data).pipe(\n      map((result) => {\n        this.log(\"POST: /api/system/registration\", result);\n        // const data = new Registration(result.data);\n        // const msg = 'You\\'ve successfully updated your registration.';\n        // const success = true;\n        return new ServiceResult<Registration>(result, \"\", true);\n      }),\n      catchError(\n        this.handleError<ServiceResult<Registration>>(\n          \"POST: /api/system/registration\"\n        )\n      )\n    );\n  }\n\n  public getAudioConfig$(): Observable<ServiceResult<Output>> {\n    return this.http.get<Output>(\"/api/audio/config\").pipe(\n      map((result) => {\n        this.log(\"GET: /api/audio/config\", result);\n        return new ServiceResult<Output>(result, \"\", true);\n      })\n    );\n  }\n\n  public putAudioConfig$(data: Output): Observable<ServiceResult<Output>> {\n    return this.http\n      .post<ServiceResult<Output>>(\"/api/audio/config\", data)\n      .pipe(\n        map((result) => {\n          this.log(\"POST: /api/audio/config\", result);\n          return result;\n        })\n      );\n  }\n\n  public ouput1$(): Observable<ServiceResult<Output>> {\n    const ret = new Output();\n    const result = new ServiceResult<Output>();\n    result.data = ret;\n    return of(result);\n  }\n\n  public oscOCXO$(): Observable<boolean> {\n    return this.http.get<ServiceResult<boolean>>(\"/api/ocxo\").pipe(\n      map((result) => {\n        this.log(\"GET: /api/ocxo\", result);\n        return result.data;\n      })\n    );\n  }\n\n  public oscDFXO$(): Observable<boolean> {\n    return this.http.get<ServiceResult<boolean>>(\"/api/dfxo\").pipe(\n      map((result) => {\n        this.log(\"GET: /api/dfxo\", result);\n        return result.data;\n      })\n    );\n  }\n\n  private log(message: string, data: any) {\n    if (1 === 1) {\n      console.log(message);\n      console.log(data);\n    }\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = \"operation\", result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`, result);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","/* \"Barrel\" of Http Interceptors */\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ServiceURLInterceptor } from './serviceurl-interceptor';\n\n/** Http interceptor providers in outside-in order */\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: ServiceURLInterceptor, multi: true },\n];\n","export class ServiceResult<T> {\n\n    constructor()\n    constructor(data: T, message?: string, success?: boolean)\n    constructor(data?: T, message: string = '', success: boolean = true) {\n        this.data = data;\n        this.message = message;\n        this.success = success;\n    }\n\n    public data: T;\n    public message: string;\n    public success: boolean;\n\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class ServiceURLInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>, next: HttpHandler):\n    Observable<HttpEvent<any>> {\n    // clone request and replace 'http://' with 'https://' at the same time\n    console.log(req.url);\n    const secureReq = req.clone({\n      url: (environment.production ? window.location.origin : environment.prefixURL) + req.url\n    });\n    // send the cloned, \"secure\" request to the next handler.\n    return next.handle(secureReq);\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { MatBottomSheet } from \"@angular/material/bottom-sheet\";\nimport { Subscription } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport { BottomSheetDataComponent } from \"../bottom-sheet-data/bottom-sheet-data.component\";\nimport { ApiService } from \"../services/api.service\";\n\n@Component({\n  selector: \"app-update\",\n  templateUrl: \"./update.component.html\",\n  styleUrls: [\"./update.component.scss\"],\n})\nexport class UpdateComponent implements OnInit, OnDestroy {\n  public isUpdateRequired = false;\n  public isCheckingUpdateRequired = true;\n  public motd = \"\";\n  public updating = false;\n  private subs: Subscription[];\n\n  constructor(\n    private service: ApiService,\n    private bottomSheet: MatBottomSheet\n  ) {}\n\n  ngOnInit() {\n    const sub1 = this.service\n      .getUpdateRequired$()\n      .pipe(\n        tap((result) => {\n          this.isUpdateRequired = result;\n          this.isCheckingUpdateRequired = false;\n        })\n      )\n      .subscribe(\n        (result) => {},\n        (error) => {\n          console.log(error);\n        }\n      );\n    this.subs.push(sub1);\n\n    const sub2 = this.service\n      .getMotd$()\n      .pipe(\n        tap((result) => {\n          this.motd = result;\n        })\n      )\n      .subscribe(\n        (result) => {},\n        (error) => {\n          console.log(error);\n        }\n      );\n    this.subs.push(sub2);\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n\n  public doUpdate() {\n    this.updating = true;\n    this.service.doUpdate$().subscribe(\n      (result) => {\n        let msg = \"\";\n        if (result) {\n          msg = `We got the update and are applying it now. We'll refresh the page, but if the update takes a long time, you may need to refresh the page yourself in about 2 minutes.`;\n        } else {\n          msg = `Seems like you might already be up to date. We're going to refresh the page and check again.`;\n        }\n        this.bottomSheet.open(BottomSheetDataComponent, {\n          data: { message: msg, progress: true },\n        });\n        setTimeout(() => {\n          this.updating = true;\n          window.location.reload();\n        }, 2000);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<section id=\"section-network\" class=\"container flex-fill\">\n  <h1>Check for Updates</h1>\n  <div *ngIf=\"isCheckingUpdateRequired\">\n    Checking for updates...\n    <br>\n    <br>\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n  </div>\n  <div *ngIf=\"!isCheckingUpdateRequired && isUpdateRequired\">\n    We found an update. Click the button below to update your system. Please note:\n    <ul>\n      <li>This may take a while: 2 minutes is not unlikely.</li>\n      <li>Losing power now would be bad: please wait to update if there's a risk of a power outage.</li>\n      <li>Updates are good: we roll out new features and fixes through our updates.</li>\n    </ul>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"doUpdate()\" [disabled]=\"updating\">Update Now</button>\n  </div>\n  <div *ngIf=\"!isCheckingUpdateRequired && !isUpdateRequired\">\n    Looks like you're up to date.\n  </div>\n  <pre class=\"mt-5\">{{ motd }}</pre>\n</section>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  prefixURL: 'http://10.0.0.57'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}